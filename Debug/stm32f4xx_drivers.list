
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000934  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000010  08000af8  08000af8  00010af8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000b08  08000b08  00010b10  2**0
                  CONTENTS
  4 .ARM          00000000  08000b08  08000b08  00010b10  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b08  08000b10  00010b10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b08  08000b08  00010b08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b0c  08000b0c  00010b0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b10  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b10  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010b10  2**0
                  CONTENTS, READONLY
 12 .debug_info   000017ce  00000000  00000000  00010b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000044e  00000000  00000000  00012308  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000118  00000000  00000000  00012758  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000e0  00000000  00000000  00012870  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002343  00000000  00000000  00012950  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000116d  00000000  00000000  00014c93  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000097fb  00000000  00000000  00015e00  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001f5fb  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000038c  00000000  00000000  0001f678  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000ae0 	.word	0x08000ae0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000ae0 	.word	0x08000ae0

08000204 <strlen>:
 8000204:	4603      	mov	r3, r0
 8000206:	f813 2b01 	ldrb.w	r2, [r3], #1
 800020a:	2a00      	cmp	r2, #0
 800020c:	d1fb      	bne.n	8000206 <strlen+0x2>
 800020e:	1a18      	subs	r0, r3, r0
 8000210:	3801      	subs	r0, #1
 8000212:	4770      	bx	lr

08000214 <SPI2_GPIOInits>:
 * PB12 --> SPI2_NSS
 * ALT function mode: AF5
 */

void SPI2_GPIOInits(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOB;
 800021a:	4b0e      	ldr	r3, [pc, #56]	; (8000254 <SPI2_GPIOInits+0x40>)
 800021c:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 800021e:	2302      	movs	r3, #2
 8000220:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
 8000222:	2305      	movs	r3, #5
 8000224:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000226:	2300      	movs	r3, #0
 8000228:	733b      	strb	r3, [r7, #12]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 800022a:	2300      	movs	r3, #0
 800022c:	72fb      	strb	r3, [r7, #11]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800022e:	2302      	movs	r3, #2
 8000230:	72bb      	strb	r3, [r7, #10]

	/* SCLK Init */
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000232:	230d      	movs	r3, #13
 8000234:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000236:	1d3b      	adds	r3, r7, #4
 8000238:	4618      	mov	r0, r3
 800023a:	f000 f94d 	bl	80004d8 <GPIO_Init>

	/* MOSI Init */
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 800023e:	230f      	movs	r3, #15
 8000240:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000242:	1d3b      	adds	r3, r7, #4
 8000244:	4618      	mov	r0, r3
 8000246:	f000 f947 	bl	80004d8 <GPIO_Init>

	/* NSS Init */
	//SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
	//GPIO_Init(&SPIPins);

}
 800024a:	bf00      	nop
 800024c:	3710      	adds	r7, #16
 800024e:	46bd      	mov	sp, r7
 8000250:	bd80      	pop	{r7, pc}
 8000252:	bf00      	nop
 8000254:	40020400 	.word	0x40020400

08000258 <SPI2_Inits>:


void SPI2_Inits()
{
 8000258:	b580      	push	{r7, lr}
 800025a:	b084      	sub	sp, #16
 800025c:	af00      	add	r7, sp, #0
	SPI_Handle_t SPIHandle;

	SPIHandle.pSPIx = SPI2;
 800025e:	4b0c      	ldr	r3, [pc, #48]	; (8000290 <SPI2_Inits+0x38>)
 8000260:	607b      	str	r3, [r7, #4]
	SPIHandle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 8000262:	2301      	movs	r3, #1
 8000264:	727b      	strb	r3, [r7, #9]
	SPIHandle.SPIConfig.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
 8000266:	2301      	movs	r3, #1
 8000268:	723b      	strb	r3, [r7, #8]
	SPIHandle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV2; //8MHz
 800026a:	2300      	movs	r3, #0
 800026c:	72bb      	strb	r3, [r7, #10]
	SPIHandle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
 800026e:	2300      	movs	r3, #0
 8000270:	72fb      	strb	r3, [r7, #11]
	SPIHandle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 8000272:	2300      	movs	r3, #0
 8000274:	733b      	strb	r3, [r7, #12]
	SPIHandle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 8000276:	2300      	movs	r3, #0
 8000278:	737b      	strb	r3, [r7, #13]
	SPIHandle.SPIConfig.SPI_SSM = SPI_SSM_EN; //SSM Enabled for NSS pin
 800027a:	2301      	movs	r3, #1
 800027c:	73bb      	strb	r3, [r7, #14]

	SPI_Init(&SPIHandle);
 800027e:	1d3b      	adds	r3, r7, #4
 8000280:	4618      	mov	r0, r3
 8000282:	f000 fb33 	bl	80008ec <SPI_Init>
}
 8000286:	bf00      	nop
 8000288:	3710      	adds	r7, #16
 800028a:	46bd      	mov	sp, r7
 800028c:	bd80      	pop	{r7, pc}
 800028e:	bf00      	nop
 8000290:	40003800 	.word	0x40003800

08000294 <main>:


int main(void)
{
 8000294:	b590      	push	{r4, r7, lr}
 8000296:	b085      	sub	sp, #20
 8000298:	af00      	add	r7, sp, #0
	char user_data[] = "Hello World!";
 800029a:	4b10      	ldr	r3, [pc, #64]	; (80002dc <main+0x48>)
 800029c:	463c      	mov	r4, r7
 800029e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80002a0:	c407      	stmia	r4!, {r0, r1, r2}
 80002a2:	7023      	strb	r3, [r4, #0]

	/* Initialize GPIO pins to behave as SPI2 pins */
	SPI2_GPIOInits();
 80002a4:	f7ff ffb6 	bl	8000214 <SPI2_GPIOInits>

	/* Initialize SPI2 peripheral parameters */
	SPI2_Inits();
 80002a8:	f7ff ffd6 	bl	8000258 <SPI2_Inits>

	/* Makes NSS sigmal internaly high and avoids MODE error */
	SPI_SSIConfig(SPI2, ENABLE);
 80002ac:	2101      	movs	r1, #1
 80002ae:	480c      	ldr	r0, [pc, #48]	; (80002e0 <main+0x4c>)
 80002b0:	f000 fbd6 	bl	8000a60 <SPI_SSIConfig>

	/* Enable SPI2 peripheral */
	SPI_PeripheralControl(SPI2, ENABLE);
 80002b4:	2101      	movs	r1, #1
 80002b6:	480a      	ldr	r0, [pc, #40]	; (80002e0 <main+0x4c>)
 80002b8:	f000 fbb7 	bl	8000a2a <SPI_PeripheralControl>

	/* Send SPI data */
	SPI_SendData(SPI2, (uint8_t *)user_data, strlen(user_data));
 80002bc:	463b      	mov	r3, r7
 80002be:	4618      	mov	r0, r3
 80002c0:	f7ff ffa0 	bl	8000204 <strlen>
 80002c4:	4602      	mov	r2, r0
 80002c6:	463b      	mov	r3, r7
 80002c8:	4619      	mov	r1, r3
 80002ca:	4805      	ldr	r0, [pc, #20]	; (80002e0 <main+0x4c>)
 80002cc:	f000 fb75 	bl	80009ba <SPI_SendData>

	/* Enable SPI2 peripheral */
	SPI_PeripheralControl(SPI2, DISABLE);
 80002d0:	2100      	movs	r1, #0
 80002d2:	4803      	ldr	r0, [pc, #12]	; (80002e0 <main+0x4c>)
 80002d4:	f000 fba9 	bl	8000a2a <SPI_PeripheralControl>

	while(1);
 80002d8:	e7fe      	b.n	80002d8 <main+0x44>
 80002da:	bf00      	nop
 80002dc:	08000af8 	.word	0x08000af8
 80002e0:	40003800 	.word	0x40003800

080002e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e4:	480d      	ldr	r0, [pc, #52]	; (800031c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e6:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e8:	480d      	ldr	r0, [pc, #52]	; (8000320 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ea:	490e      	ldr	r1, [pc, #56]	; (8000324 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ec:	4a0e      	ldr	r2, [pc, #56]	; (8000328 <LoopForever+0xe>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f0:	e002      	b.n	80002f8 <LoopCopyDataInit>

080002f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f6:	3304      	adds	r3, #4

080002f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002fc:	d3f9      	bcc.n	80002f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fe:	4a0b      	ldr	r2, [pc, #44]	; (800032c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000300:	4c0b      	ldr	r4, [pc, #44]	; (8000330 <LoopForever+0x16>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000304:	e001      	b.n	800030a <LoopFillZerobss>

08000306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000308:	3204      	adds	r2, #4

0800030a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800030c:	d3fb      	bcc.n	8000306 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800030e:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000312:	f000 fbc1 	bl	8000a98 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000316:	f7ff ffbd 	bl	8000294 <main>

0800031a <LoopForever>:

LoopForever:
    b LoopForever
 800031a:	e7fe      	b.n	800031a <LoopForever>
  ldr   r0, =_estack
 800031c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000320:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000324:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000328:	08000b10 	.word	0x08000b10
  ldr r2, =_sbss
 800032c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000330:	2000001c 	.word	0x2000001c

08000334 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000334:	e7fe      	b.n	8000334 <ADC_IRQHandler>
	...

08000338 <GPIO_PeriClockControl>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000338:	b480      	push	{r7}
 800033a:	b083      	sub	sp, #12
 800033c:	af00      	add	r7, sp, #0
 800033e:	6078      	str	r0, [r7, #4]
 8000340:	460b      	mov	r3, r1
 8000342:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE)
 8000344:	78fb      	ldrb	r3, [r7, #3]
 8000346:	2b01      	cmp	r3, #1
 8000348:	d157      	bne.n	80003fa <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a59      	ldr	r2, [pc, #356]	; (80004b4 <GPIO_PeriClockControl+0x17c>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000352:	4b59      	ldr	r3, [pc, #356]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a58      	ldr	r2, [pc, #352]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000358:	f043 0301 	orr.w	r3, r3, #1
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
	}
}
 800035e:	e0a3      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a56      	ldr	r2, [pc, #344]	; (80004bc <GPIO_PeriClockControl+0x184>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000368:	4b53      	ldr	r3, [pc, #332]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a52      	ldr	r2, [pc, #328]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800036e:	f043 0302 	orr.w	r3, r3, #2
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	e098      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a51      	ldr	r2, [pc, #324]	; (80004c0 <GPIO_PeriClockControl+0x188>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800037e:	4b4e      	ldr	r3, [pc, #312]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000382:	4a4d      	ldr	r2, [pc, #308]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000384:	f043 0304 	orr.w	r3, r3, #4
 8000388:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038a:	e08d      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a4d      	ldr	r2, [pc, #308]	; (80004c4 <GPIO_PeriClockControl+0x18c>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000394:	4b48      	ldr	r3, [pc, #288]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000398:	4a47      	ldr	r2, [pc, #284]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800039a:	f043 0308 	orr.w	r3, r3, #8
 800039e:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a0:	e082      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a48      	ldr	r2, [pc, #288]	; (80004c8 <GPIO_PeriClockControl+0x190>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d106      	bne.n	80003b8 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80003aa:	4b43      	ldr	r3, [pc, #268]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ae:	4a42      	ldr	r2, [pc, #264]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003b0:	f043 0310 	orr.w	r3, r3, #16
 80003b4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b6:	e077      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a44      	ldr	r2, [pc, #272]	; (80004cc <GPIO_PeriClockControl+0x194>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003c0:	4b3d      	ldr	r3, [pc, #244]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c4:	4a3c      	ldr	r2, [pc, #240]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003c6:	f043 0320 	orr.w	r3, r3, #32
 80003ca:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003cc:	e06c      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a3f      	ldr	r2, [pc, #252]	; (80004d0 <GPIO_PeriClockControl+0x198>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003d6:	4b38      	ldr	r3, [pc, #224]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003da:	4a37      	ldr	r2, [pc, #220]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003e0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e2:	e061      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a3b      	ldr	r2, [pc, #236]	; (80004d4 <GPIO_PeriClockControl+0x19c>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d15d      	bne.n	80004a8 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80003ec:	4b32      	ldr	r3, [pc, #200]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f0:	4a31      	ldr	r2, [pc, #196]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80003f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003f6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f8:	e056      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a2d      	ldr	r2, [pc, #180]	; (80004b4 <GPIO_PeriClockControl+0x17c>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 8000402:	4b2d      	ldr	r3, [pc, #180]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000406:	4a2c      	ldr	r2, [pc, #176]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000408:	f023 0301 	bic.w	r3, r3, #1
 800040c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040e:	e04b      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a2a      	ldr	r2, [pc, #168]	; (80004bc <GPIO_PeriClockControl+0x184>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d106      	bne.n	8000426 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 8000418:	4b27      	ldr	r3, [pc, #156]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800041a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041c:	4a26      	ldr	r2, [pc, #152]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800041e:	f023 0302 	bic.w	r3, r3, #2
 8000422:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000424:	e040      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4a25      	ldr	r2, [pc, #148]	; (80004c0 <GPIO_PeriClockControl+0x188>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d106      	bne.n	800043c <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 800042e:	4b22      	ldr	r3, [pc, #136]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000432:	4a21      	ldr	r2, [pc, #132]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000434:	f023 0304 	bic.w	r3, r3, #4
 8000438:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043a:	e035      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	4a21      	ldr	r2, [pc, #132]	; (80004c4 <GPIO_PeriClockControl+0x18c>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d106      	bne.n	8000452 <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 8000444:	4b1c      	ldr	r3, [pc, #112]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000446:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000448:	4a1b      	ldr	r2, [pc, #108]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800044a:	f023 0308 	bic.w	r3, r3, #8
 800044e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000450:	e02a      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4a1c      	ldr	r2, [pc, #112]	; (80004c8 <GPIO_PeriClockControl+0x190>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d106      	bne.n	8000468 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 800045a:	4b17      	ldr	r3, [pc, #92]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800045c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045e:	4a16      	ldr	r2, [pc, #88]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000460:	f023 0310 	bic.w	r3, r3, #16
 8000464:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000466:	e01f      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4a18      	ldr	r2, [pc, #96]	; (80004cc <GPIO_PeriClockControl+0x194>)
 800046c:	4293      	cmp	r3, r2
 800046e:	d106      	bne.n	800047e <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 8000470:	4b11      	ldr	r3, [pc, #68]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000474:	4a10      	ldr	r2, [pc, #64]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000476:	f023 0320 	bic.w	r3, r3, #32
 800047a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047c:	e014      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4a13      	ldr	r2, [pc, #76]	; (80004d0 <GPIO_PeriClockControl+0x198>)
 8000482:	4293      	cmp	r3, r2
 8000484:	d106      	bne.n	8000494 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000486:	4b0c      	ldr	r3, [pc, #48]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 8000488:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048a:	4a0b      	ldr	r2, [pc, #44]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800048c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000490:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000492:	e009      	b.n	80004a8 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	4a0f      	ldr	r2, [pc, #60]	; (80004d4 <GPIO_PeriClockControl+0x19c>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d105      	bne.n	80004a8 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 800049c:	4b06      	ldr	r3, [pc, #24]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 800049e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a0:	4a05      	ldr	r2, [pc, #20]	; (80004b8 <GPIO_PeriClockControl+0x180>)
 80004a2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80004a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a8:	bf00      	nop
 80004aa:	370c      	adds	r7, #12
 80004ac:	46bd      	mov	sp, r7
 80004ae:	bc80      	pop	{r7}
 80004b0:	4770      	bx	lr
 80004b2:	bf00      	nop
 80004b4:	40020000 	.word	0x40020000
 80004b8:	40023800 	.word	0x40023800
 80004bc:	40020400 	.word	0x40020400
 80004c0:	40020800 	.word	0x40020800
 80004c4:	40020c00 	.word	0x40020c00
 80004c8:	40021000 	.word	0x40021000
 80004cc:	40021400 	.word	0x40021400
 80004d0:	40021800 	.word	0x40021800
 80004d4:	40021c00 	.word	0x40021c00

080004d8 <GPIO_Init>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004d8:	b580      	push	{r7, lr}
 80004da:	b086      	sub	sp, #24
 80004dc:	af00      	add	r7, sp, #0
 80004de:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80004e0:	2300      	movs	r3, #0
 80004e2:	617b      	str	r3, [r7, #20]

	/* Enable peripheral clock */
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	2101      	movs	r1, #1
 80004ea:	4618      	mov	r0, r3
 80004ec:	f7ff ff24 	bl	8000338 <GPIO_PeriClockControl>

	/* GPIO pin mode configuration */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	795b      	ldrb	r3, [r3, #5]
 80004f4:	2b03      	cmp	r3, #3
 80004f6:	d822      	bhi.n	800053e <GPIO_Init+0x66>
	{
		/* Non interrupt mode */
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	795b      	ldrb	r3, [r3, #5]
 80004fc:	461a      	mov	r2, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	005b      	lsls	r3, r3, #1
 8000504:	fa02 f303 	lsl.w	r3, r2, r3
 8000508:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER  &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Clearing pin
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	681a      	ldr	r2, [r3, #0]
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	791b      	ldrb	r3, [r3, #4]
 8000514:	005b      	lsls	r3, r3, #1
 8000516:	2103      	movs	r1, #3
 8000518:	fa01 f303 	lsl.w	r3, r1, r3
 800051c:	43db      	mvns	r3, r3
 800051e:	4619      	mov	r1, r3
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	400a      	ands	r2, r1
 8000526:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;//Setting pin
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	6819      	ldr	r1, [r3, #0]
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	697a      	ldr	r2, [r7, #20]
 8000534:	430a      	orrs	r2, r1
 8000536:	601a      	str	r2, [r3, #0]
		temp = 0;
 8000538:	2300      	movs	r3, #0
 800053a:	617b      	str	r3, [r7, #20]
 800053c:	e0c1      	b.n	80006c2 <GPIO_Init+0x1ea>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	795b      	ldrb	r3, [r3, #5]
 8000542:	2b04      	cmp	r3, #4
 8000544:	d117      	bne.n	8000576 <GPIO_Init+0x9e>
		{
			/* Configure the FTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000546:	4b47      	ldr	r3, [pc, #284]	; (8000664 <GPIO_Init+0x18c>)
 8000548:	68db      	ldr	r3, [r3, #12]
 800054a:	687a      	ldr	r2, [r7, #4]
 800054c:	7912      	ldrb	r2, [r2, #4]
 800054e:	4611      	mov	r1, r2
 8000550:	2201      	movs	r2, #1
 8000552:	408a      	lsls	r2, r1
 8000554:	4611      	mov	r1, r2
 8000556:	4a43      	ldr	r2, [pc, #268]	; (8000664 <GPIO_Init+0x18c>)
 8000558:	430b      	orrs	r3, r1
 800055a:	60d3      	str	r3, [r2, #12]
			/* Clear corresponding RTSR bit */
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055c:	4b41      	ldr	r3, [pc, #260]	; (8000664 <GPIO_Init+0x18c>)
 800055e:	689b      	ldr	r3, [r3, #8]
 8000560:	687a      	ldr	r2, [r7, #4]
 8000562:	7912      	ldrb	r2, [r2, #4]
 8000564:	4611      	mov	r1, r2
 8000566:	2201      	movs	r2, #1
 8000568:	408a      	lsls	r2, r1
 800056a:	43d2      	mvns	r2, r2
 800056c:	4611      	mov	r1, r2
 800056e:	4a3d      	ldr	r2, [pc, #244]	; (8000664 <GPIO_Init+0x18c>)
 8000570:	400b      	ands	r3, r1
 8000572:	6093      	str	r3, [r2, #8]
 8000574:	e035      	b.n	80005e2 <GPIO_Init+0x10a>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	795b      	ldrb	r3, [r3, #5]
 800057a:	2b05      	cmp	r3, #5
 800057c:	d117      	bne.n	80005ae <GPIO_Init+0xd6>
		{
			/* Configure the RTSR */
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057e:	4b39      	ldr	r3, [pc, #228]	; (8000664 <GPIO_Init+0x18c>)
 8000580:	689b      	ldr	r3, [r3, #8]
 8000582:	687a      	ldr	r2, [r7, #4]
 8000584:	7912      	ldrb	r2, [r2, #4]
 8000586:	4611      	mov	r1, r2
 8000588:	2201      	movs	r2, #1
 800058a:	408a      	lsls	r2, r1
 800058c:	4611      	mov	r1, r2
 800058e:	4a35      	ldr	r2, [pc, #212]	; (8000664 <GPIO_Init+0x18c>)
 8000590:	430b      	orrs	r3, r1
 8000592:	6093      	str	r3, [r2, #8]
			/* Clear corresponding FTSR bit */
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000594:	4b33      	ldr	r3, [pc, #204]	; (8000664 <GPIO_Init+0x18c>)
 8000596:	68db      	ldr	r3, [r3, #12]
 8000598:	687a      	ldr	r2, [r7, #4]
 800059a:	7912      	ldrb	r2, [r2, #4]
 800059c:	4611      	mov	r1, r2
 800059e:	2201      	movs	r2, #1
 80005a0:	408a      	lsls	r2, r1
 80005a2:	43d2      	mvns	r2, r2
 80005a4:	4611      	mov	r1, r2
 80005a6:	4a2f      	ldr	r2, [pc, #188]	; (8000664 <GPIO_Init+0x18c>)
 80005a8:	400b      	ands	r3, r1
 80005aa:	60d3      	str	r3, [r2, #12]
 80005ac:	e019      	b.n	80005e2 <GPIO_Init+0x10a>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT)
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	795b      	ldrb	r3, [r3, #5]
 80005b2:	2b06      	cmp	r3, #6
 80005b4:	d115      	bne.n	80005e2 <GPIO_Init+0x10a>
		{
			/* Configure the FTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b6:	4b2b      	ldr	r3, [pc, #172]	; (8000664 <GPIO_Init+0x18c>)
 80005b8:	68db      	ldr	r3, [r3, #12]
 80005ba:	687a      	ldr	r2, [r7, #4]
 80005bc:	7912      	ldrb	r2, [r2, #4]
 80005be:	4611      	mov	r1, r2
 80005c0:	2201      	movs	r2, #1
 80005c2:	408a      	lsls	r2, r1
 80005c4:	4611      	mov	r1, r2
 80005c6:	4a27      	ldr	r2, [pc, #156]	; (8000664 <GPIO_Init+0x18c>)
 80005c8:	430b      	orrs	r3, r1
 80005ca:	60d3      	str	r3, [r2, #12]
			/* Configure the RTSR */
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005cc:	4b25      	ldr	r3, [pc, #148]	; (8000664 <GPIO_Init+0x18c>)
 80005ce:	689b      	ldr	r3, [r3, #8]
 80005d0:	687a      	ldr	r2, [r7, #4]
 80005d2:	7912      	ldrb	r2, [r2, #4]
 80005d4:	4611      	mov	r1, r2
 80005d6:	2201      	movs	r2, #1
 80005d8:	408a      	lsls	r2, r1
 80005da:	4611      	mov	r1, r2
 80005dc:	4a21      	ldr	r2, [pc, #132]	; (8000664 <GPIO_Init+0x18c>)
 80005de:	430b      	orrs	r3, r1
 80005e0:	6093      	str	r3, [r2, #8]
		}

		/* Configure GPIO port selection in SYSCFG_EXTICR */
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	791b      	ldrb	r3, [r3, #4]
 80005e6:	089b      	lsrs	r3, r3, #2
 80005e8:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	791b      	ldrb	r3, [r3, #4]
 80005ee:	f003 0303 	and.w	r3, r3, #3
 80005f2:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	4a1b      	ldr	r2, [pc, #108]	; (8000668 <GPIO_Init+0x190>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d044      	beq.n	8000688 <GPIO_Init+0x1b0>
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	4a1a      	ldr	r2, [pc, #104]	; (800066c <GPIO_Init+0x194>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d02b      	beq.n	8000660 <GPIO_Init+0x188>
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	4a18      	ldr	r2, [pc, #96]	; (8000670 <GPIO_Init+0x198>)
 800060e:	4293      	cmp	r3, r2
 8000610:	d024      	beq.n	800065c <GPIO_Init+0x184>
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	4a17      	ldr	r2, [pc, #92]	; (8000674 <GPIO_Init+0x19c>)
 8000618:	4293      	cmp	r3, r2
 800061a:	d01d      	beq.n	8000658 <GPIO_Init+0x180>
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	4a15      	ldr	r2, [pc, #84]	; (8000678 <GPIO_Init+0x1a0>)
 8000622:	4293      	cmp	r3, r2
 8000624:	d016      	beq.n	8000654 <GPIO_Init+0x17c>
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	4a14      	ldr	r2, [pc, #80]	; (800067c <GPIO_Init+0x1a4>)
 800062c:	4293      	cmp	r3, r2
 800062e:	d00f      	beq.n	8000650 <GPIO_Init+0x178>
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	4a12      	ldr	r2, [pc, #72]	; (8000680 <GPIO_Init+0x1a8>)
 8000636:	4293      	cmp	r3, r2
 8000638:	d008      	beq.n	800064c <GPIO_Init+0x174>
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	4a11      	ldr	r2, [pc, #68]	; (8000684 <GPIO_Init+0x1ac>)
 8000640:	4293      	cmp	r3, r2
 8000642:	d101      	bne.n	8000648 <GPIO_Init+0x170>
 8000644:	2307      	movs	r3, #7
 8000646:	e020      	b.n	800068a <GPIO_Init+0x1b2>
 8000648:	2300      	movs	r3, #0
 800064a:	e01e      	b.n	800068a <GPIO_Init+0x1b2>
 800064c:	2306      	movs	r3, #6
 800064e:	e01c      	b.n	800068a <GPIO_Init+0x1b2>
 8000650:	2305      	movs	r3, #5
 8000652:	e01a      	b.n	800068a <GPIO_Init+0x1b2>
 8000654:	2304      	movs	r3, #4
 8000656:	e018      	b.n	800068a <GPIO_Init+0x1b2>
 8000658:	2303      	movs	r3, #3
 800065a:	e016      	b.n	800068a <GPIO_Init+0x1b2>
 800065c:	2302      	movs	r3, #2
 800065e:	e014      	b.n	800068a <GPIO_Init+0x1b2>
 8000660:	2301      	movs	r3, #1
 8000662:	e012      	b.n	800068a <GPIO_Init+0x1b2>
 8000664:	40013c00 	.word	0x40013c00
 8000668:	40020000 	.word	0x40020000
 800066c:	40020400 	.word	0x40020400
 8000670:	40020800 	.word	0x40020800
 8000674:	40020c00 	.word	0x40020c00
 8000678:	40021000 	.word	0x40021000
 800067c:	40021400 	.word	0x40021400
 8000680:	40021800 	.word	0x40021800
 8000684:	40021c00 	.word	0x40021c00
 8000688:	2300      	movs	r3, #0
 800068a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800068c:	4b5c      	ldr	r3, [pc, #368]	; (8000800 <GPIO_Init+0x328>)
 800068e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000690:	4a5b      	ldr	r2, [pc, #364]	; (8000800 <GPIO_Init+0x328>)
 8000692:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000696:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000698:	7c7a      	ldrb	r2, [r7, #17]
 800069a:	7cbb      	ldrb	r3, [r7, #18]
 800069c:	009b      	lsls	r3, r3, #2
 800069e:	fa02 f103 	lsl.w	r1, r2, r3
 80006a2:	4a58      	ldr	r2, [pc, #352]	; (8000804 <GPIO_Init+0x32c>)
 80006a4:	7cfb      	ldrb	r3, [r7, #19]
 80006a6:	3302      	adds	r3, #2
 80006a8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		/* Enable EXTI interrupt delivery using IMR */
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006ac:	4b56      	ldr	r3, [pc, #344]	; (8000808 <GPIO_Init+0x330>)
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	687a      	ldr	r2, [r7, #4]
 80006b2:	7912      	ldrb	r2, [r2, #4]
 80006b4:	4611      	mov	r1, r2
 80006b6:	2201      	movs	r2, #1
 80006b8:	408a      	lsls	r2, r1
 80006ba:	4611      	mov	r1, r2
 80006bc:	4a52      	ldr	r2, [pc, #328]	; (8000808 <GPIO_Init+0x330>)
 80006be:	430b      	orrs	r3, r1
 80006c0:	6013      	str	r3, [r2, #0]
	}

	/* GPIO pin speed configuration */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	799b      	ldrb	r3, [r3, #6]
 80006c6:	461a      	mov	r2, r3
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	791b      	ldrb	r3, [r3, #4]
 80006cc:	005b      	lsls	r3, r3, #1
 80006ce:	fa02 f303 	lsl.w	r3, r2, r3
 80006d2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR  &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	689a      	ldr	r2, [r3, #8]
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	791b      	ldrb	r3, [r3, #4]
 80006de:	005b      	lsls	r3, r3, #1
 80006e0:	2103      	movs	r1, #3
 80006e2:	fa01 f303 	lsl.w	r3, r1, r3
 80006e6:	43db      	mvns	r3, r3
 80006e8:	4619      	mov	r1, r3
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	400a      	ands	r2, r1
 80006f0:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	6899      	ldr	r1, [r3, #8]
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	697a      	ldr	r2, [r7, #20]
 80006fe:	430a      	orrs	r2, r1
 8000700:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	617b      	str	r3, [r7, #20]

	/* GPIO pull up/down settings configuration */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	79db      	ldrb	r3, [r3, #7]
 800070a:	461a      	mov	r2, r3
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	791b      	ldrb	r3, [r3, #4]
 8000710:	005b      	lsls	r3, r3, #1
 8000712:	fa02 f303 	lsl.w	r3, r2, r3
 8000716:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR  &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	68da      	ldr	r2, [r3, #12]
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	791b      	ldrb	r3, [r3, #4]
 8000722:	005b      	lsls	r3, r3, #1
 8000724:	2103      	movs	r1, #3
 8000726:	fa01 f303 	lsl.w	r3, r1, r3
 800072a:	43db      	mvns	r3, r3
 800072c:	4619      	mov	r1, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	400a      	ands	r2, r1
 8000734:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	68d9      	ldr	r1, [r3, #12]
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	697a      	ldr	r2, [r7, #20]
 8000742:	430a      	orrs	r2, r1
 8000744:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000746:	2300      	movs	r3, #0
 8000748:	617b      	str	r3, [r7, #20]

	/* GPIO output type configuration */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	7a1b      	ldrb	r3, [r3, #8]
 800074e:	461a      	mov	r2, r3
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	791b      	ldrb	r3, [r3, #4]
 8000754:	fa02 f303 	lsl.w	r3, r2, r3
 8000758:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER  &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	685a      	ldr	r2, [r3, #4]
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	791b      	ldrb	r3, [r3, #4]
 8000764:	4619      	mov	r1, r3
 8000766:	2301      	movs	r3, #1
 8000768:	408b      	lsls	r3, r1
 800076a:	43db      	mvns	r3, r3
 800076c:	4619      	mov	r1, r3
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	400a      	ands	r2, r1
 8000774:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	6859      	ldr	r1, [r3, #4]
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	697a      	ldr	r2, [r7, #20]
 8000782:	430a      	orrs	r2, r1
 8000784:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000786:	2300      	movs	r3, #0
 8000788:	617b      	str	r3, [r7, #20]

	/* GPIO alt functionality configuration */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	795b      	ldrb	r3, [r3, #5]
 800078e:	2b02      	cmp	r3, #2
 8000790:	d131      	bne.n	80007f6 <GPIO_Init+0x31e>
	{
		/* Alt functionality registers configuration */
		uint8_t afrBitNum, afrLowHighReg;

		afrLowHighReg = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	791b      	ldrb	r3, [r3, #4]
 8000796:	08db      	lsrs	r3, r3, #3
 8000798:	743b      	strb	r3, [r7, #16]
		afrBitNum = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	791b      	ldrb	r3, [r3, #4]
 800079e:	f003 0307 	and.w	r3, r3, #7
 80007a2:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[afrLowHighReg] &= ~(0xF << (4 * afrBitNum));
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	7c3a      	ldrb	r2, [r7, #16]
 80007aa:	3208      	adds	r2, #8
 80007ac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007b0:	7bfb      	ldrb	r3, [r7, #15]
 80007b2:	009b      	lsls	r3, r3, #2
 80007b4:	220f      	movs	r2, #15
 80007b6:	fa02 f303 	lsl.w	r3, r2, r3
 80007ba:	43db      	mvns	r3, r3
 80007bc:	4618      	mov	r0, r3
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	681b      	ldr	r3, [r3, #0]
 80007c2:	7c3a      	ldrb	r2, [r7, #16]
 80007c4:	4001      	ands	r1, r0
 80007c6:	3208      	adds	r2, #8
 80007c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[afrLowHighReg] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * afrBitNum);
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	7c3a      	ldrb	r2, [r7, #16]
 80007d2:	3208      	adds	r2, #8
 80007d4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	7a5b      	ldrb	r3, [r3, #9]
 80007dc:	461a      	mov	r2, r3
 80007de:	7bfb      	ldrb	r3, [r7, #15]
 80007e0:	009b      	lsls	r3, r3, #2
 80007e2:	fa02 f303 	lsl.w	r3, r2, r3
 80007e6:	4618      	mov	r0, r3
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	681b      	ldr	r3, [r3, #0]
 80007ec:	7c3a      	ldrb	r2, [r7, #16]
 80007ee:	4301      	orrs	r1, r0
 80007f0:	3208      	adds	r2, #8
 80007f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007f6:	bf00      	nop
 80007f8:	3718      	adds	r7, #24
 80007fa:	46bd      	mov	sp, r7
 80007fc:	bd80      	pop	{r7, pc}
 80007fe:	bf00      	nop
 8000800:	40023800 	.word	0x40023800
 8000804:	40013800 	.word	0x40013800
 8000808:	40013c00 	.word	0x40013c00

0800080c <SPI_PeriClockControl>:
 *
 * @Note			- None
 *
 *****************************************************************/
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi)
{
 800080c:	b480      	push	{r7}
 800080e:	b083      	sub	sp, #12
 8000810:	af00      	add	r7, sp, #0
 8000812:	6078      	str	r0, [r7, #4]
 8000814:	460b      	mov	r3, r1
 8000816:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000818:	78fb      	ldrb	r3, [r7, #3]
 800081a:	2b01      	cmp	r3, #1
 800081c:	d12b      	bne.n	8000876 <SPI_PeriClockControl+0x6a>
	{
		if(pSPIx == SPI1)
 800081e:	687b      	ldr	r3, [r7, #4]
 8000820:	4a2d      	ldr	r2, [pc, #180]	; (80008d8 <SPI_PeriClockControl+0xcc>)
 8000822:	4293      	cmp	r3, r2
 8000824:	d106      	bne.n	8000834 <SPI_PeriClockControl+0x28>
		{
			SPI1_PCLK_EN();
 8000826:	4b2d      	ldr	r3, [pc, #180]	; (80008dc <SPI_PeriClockControl+0xd0>)
 8000828:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800082a:	4a2c      	ldr	r2, [pc, #176]	; (80008dc <SPI_PeriClockControl+0xd0>)
 800082c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000830:	6453      	str	r3, [r2, #68]	; 0x44
		else if(pSPIx == SPI4)
		{
			SPI4_PCLK_DI();
		}
	}
}
 8000832:	e04b      	b.n	80008cc <SPI_PeriClockControl+0xc0>
		else if(pSPIx == SPI2)
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	4a2a      	ldr	r2, [pc, #168]	; (80008e0 <SPI_PeriClockControl+0xd4>)
 8000838:	4293      	cmp	r3, r2
 800083a:	d106      	bne.n	800084a <SPI_PeriClockControl+0x3e>
			SPI2_PCLK_EN();
 800083c:	4b27      	ldr	r3, [pc, #156]	; (80008dc <SPI_PeriClockControl+0xd0>)
 800083e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000840:	4a26      	ldr	r2, [pc, #152]	; (80008dc <SPI_PeriClockControl+0xd0>)
 8000842:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000846:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000848:	e040      	b.n	80008cc <SPI_PeriClockControl+0xc0>
		else if(pSPIx == SPI3)
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	4a25      	ldr	r2, [pc, #148]	; (80008e4 <SPI_PeriClockControl+0xd8>)
 800084e:	4293      	cmp	r3, r2
 8000850:	d106      	bne.n	8000860 <SPI_PeriClockControl+0x54>
			SPI3_PCLK_EN();
 8000852:	4b22      	ldr	r3, [pc, #136]	; (80008dc <SPI_PeriClockControl+0xd0>)
 8000854:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000856:	4a21      	ldr	r2, [pc, #132]	; (80008dc <SPI_PeriClockControl+0xd0>)
 8000858:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800085c:	6413      	str	r3, [r2, #64]	; 0x40
}
 800085e:	e035      	b.n	80008cc <SPI_PeriClockControl+0xc0>
		else if(pSPIx == SPI4)
 8000860:	687b      	ldr	r3, [r7, #4]
 8000862:	4a21      	ldr	r2, [pc, #132]	; (80008e8 <SPI_PeriClockControl+0xdc>)
 8000864:	4293      	cmp	r3, r2
 8000866:	d131      	bne.n	80008cc <SPI_PeriClockControl+0xc0>
			SPI4_PCLK_EN();
 8000868:	4b1c      	ldr	r3, [pc, #112]	; (80008dc <SPI_PeriClockControl+0xd0>)
 800086a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800086c:	4a1b      	ldr	r2, [pc, #108]	; (80008dc <SPI_PeriClockControl+0xd0>)
 800086e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000872:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000874:	e02a      	b.n	80008cc <SPI_PeriClockControl+0xc0>
		if(pSPIx == SPI1)
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	4a17      	ldr	r2, [pc, #92]	; (80008d8 <SPI_PeriClockControl+0xcc>)
 800087a:	4293      	cmp	r3, r2
 800087c:	d106      	bne.n	800088c <SPI_PeriClockControl+0x80>
			SPI1_PCLK_DI();
 800087e:	4b17      	ldr	r3, [pc, #92]	; (80008dc <SPI_PeriClockControl+0xd0>)
 8000880:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000882:	4a16      	ldr	r2, [pc, #88]	; (80008dc <SPI_PeriClockControl+0xd0>)
 8000884:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000888:	6453      	str	r3, [r2, #68]	; 0x44
}
 800088a:	e01f      	b.n	80008cc <SPI_PeriClockControl+0xc0>
		else if(pSPIx == SPI2)
 800088c:	687b      	ldr	r3, [r7, #4]
 800088e:	4a14      	ldr	r2, [pc, #80]	; (80008e0 <SPI_PeriClockControl+0xd4>)
 8000890:	4293      	cmp	r3, r2
 8000892:	d106      	bne.n	80008a2 <SPI_PeriClockControl+0x96>
			SPI2_PCLK_DI();
 8000894:	4b11      	ldr	r3, [pc, #68]	; (80008dc <SPI_PeriClockControl+0xd0>)
 8000896:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000898:	4a10      	ldr	r2, [pc, #64]	; (80008dc <SPI_PeriClockControl+0xd0>)
 800089a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800089e:	6413      	str	r3, [r2, #64]	; 0x40
}
 80008a0:	e014      	b.n	80008cc <SPI_PeriClockControl+0xc0>
		else if(pSPIx == SPI3)
 80008a2:	687b      	ldr	r3, [r7, #4]
 80008a4:	4a0f      	ldr	r2, [pc, #60]	; (80008e4 <SPI_PeriClockControl+0xd8>)
 80008a6:	4293      	cmp	r3, r2
 80008a8:	d106      	bne.n	80008b8 <SPI_PeriClockControl+0xac>
			SPI3_PCLK_DI();
 80008aa:	4b0c      	ldr	r3, [pc, #48]	; (80008dc <SPI_PeriClockControl+0xd0>)
 80008ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80008ae:	4a0b      	ldr	r2, [pc, #44]	; (80008dc <SPI_PeriClockControl+0xd0>)
 80008b0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80008b4:	6413      	str	r3, [r2, #64]	; 0x40
}
 80008b6:	e009      	b.n	80008cc <SPI_PeriClockControl+0xc0>
		else if(pSPIx == SPI4)
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	4a0b      	ldr	r2, [pc, #44]	; (80008e8 <SPI_PeriClockControl+0xdc>)
 80008bc:	4293      	cmp	r3, r2
 80008be:	d105      	bne.n	80008cc <SPI_PeriClockControl+0xc0>
			SPI4_PCLK_DI();
 80008c0:	4b06      	ldr	r3, [pc, #24]	; (80008dc <SPI_PeriClockControl+0xd0>)
 80008c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80008c4:	4a05      	ldr	r2, [pc, #20]	; (80008dc <SPI_PeriClockControl+0xd0>)
 80008c6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80008ca:	6453      	str	r3, [r2, #68]	; 0x44
}
 80008cc:	bf00      	nop
 80008ce:	370c      	adds	r7, #12
 80008d0:	46bd      	mov	sp, r7
 80008d2:	bc80      	pop	{r7}
 80008d4:	4770      	bx	lr
 80008d6:	bf00      	nop
 80008d8:	40013000 	.word	0x40013000
 80008dc:	40023800 	.word	0x40023800
 80008e0:	40003800 	.word	0x40003800
 80008e4:	40003c00 	.word	0x40003c00
 80008e8:	40013400 	.word	0x40013400

080008ec <SPI_Init>:
 *
 * @Note			- None
 *
 *****************************************************************/
void SPI_Init(SPI_Handle_t *pSPIHandle)
{
 80008ec:	b580      	push	{r7, lr}
 80008ee:	b084      	sub	sp, #16
 80008f0:	af00      	add	r7, sp, #0
 80008f2:	6078      	str	r0, [r7, #4]
	/* SPI_CR1 register configuration */
	uint32_t tempreg = 0;
 80008f4:	2300      	movs	r3, #0
 80008f6:	60fb      	str	r3, [r7, #12]

	/* Enable peripheral clock */
	SPI_PeriClockControl(pSPIHandle->pSPIx, ENABLE);
 80008f8:	687b      	ldr	r3, [r7, #4]
 80008fa:	681b      	ldr	r3, [r3, #0]
 80008fc:	2101      	movs	r1, #1
 80008fe:	4618      	mov	r0, r3
 8000900:	f7ff ff84 	bl	800080c <SPI_PeriClockControl>

	/* Device mode configuration */
	tempreg |= pSPIHandle->SPIConfig.SPI_DeviceMode << 2;
 8000904:	687b      	ldr	r3, [r7, #4]
 8000906:	791b      	ldrb	r3, [r3, #4]
 8000908:	009b      	lsls	r3, r3, #2
 800090a:	461a      	mov	r2, r3
 800090c:	68fb      	ldr	r3, [r7, #12]
 800090e:	4313      	orrs	r3, r2
 8000910:	60fb      	str	r3, [r7, #12]

	/* Bus configuration */
	if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_FD)
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	795b      	ldrb	r3, [r3, #5]
 8000916:	2b01      	cmp	r3, #1
 8000918:	d104      	bne.n	8000924 <SPI_Init+0x38>
	{
		/* Bidirectional mode clear */
		tempreg &= ~(1 << 15);
 800091a:	68fb      	ldr	r3, [r7, #12]
 800091c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000920:	60fb      	str	r3, [r7, #12]
 8000922:	e014      	b.n	800094e <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_HD)
 8000924:	687b      	ldr	r3, [r7, #4]
 8000926:	795b      	ldrb	r3, [r3, #5]
 8000928:	2b02      	cmp	r3, #2
 800092a:	d104      	bne.n	8000936 <SPI_Init+0x4a>
	{
		/* Bidirectional mode set */
		tempreg |= (1 << 15);
 800092c:	68fb      	ldr	r3, [r7, #12]
 800092e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000932:	60fb      	str	r3, [r7, #12]
 8000934:	e00b      	b.n	800094e <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_SIMPLEX_RX_ONLY)
 8000936:	687b      	ldr	r3, [r7, #4]
 8000938:	795b      	ldrb	r3, [r3, #5]
 800093a:	2b03      	cmp	r3, #3
 800093c:	d107      	bne.n	800094e <SPI_Init+0x62>
	{
		/* Bidirectional mode clear */
		tempreg &= ~(1 << 15);
 800093e:	68fb      	ldr	r3, [r7, #12]
 8000940:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000944:	60fb      	str	r3, [r7, #12]

		/* Rx only mode set */
		tempreg &= ~(1 << 10);
 8000946:	68fb      	ldr	r3, [r7, #12]
 8000948:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800094c:	60fb      	str	r3, [r7, #12]
	}

	/* SPI serial clock speed (baud rate) configuration */
	tempreg |= pSPIHandle->SPIConfig.SPI_SclkSpeed << SPI_CR1_BR;
 800094e:	687b      	ldr	r3, [r7, #4]
 8000950:	799b      	ldrb	r3, [r3, #6]
 8000952:	00db      	lsls	r3, r3, #3
 8000954:	461a      	mov	r2, r3
 8000956:	68fb      	ldr	r3, [r7, #12]
 8000958:	4313      	orrs	r3, r2
 800095a:	60fb      	str	r3, [r7, #12]

	/* DFF configuration */
	tempreg |= pSPIHandle->SPIConfig.SPI_DFF << SPI_CR1_DFF;
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	79db      	ldrb	r3, [r3, #7]
 8000960:	02db      	lsls	r3, r3, #11
 8000962:	461a      	mov	r2, r3
 8000964:	68fb      	ldr	r3, [r7, #12]
 8000966:	4313      	orrs	r3, r2
 8000968:	60fb      	str	r3, [r7, #12]

	/* CPOL configuration */
	tempreg |= pSPIHandle->SPIConfig.SPI_CPOL << SPI_CR1_CPOL;
 800096a:	687b      	ldr	r3, [r7, #4]
 800096c:	7a1b      	ldrb	r3, [r3, #8]
 800096e:	005b      	lsls	r3, r3, #1
 8000970:	461a      	mov	r2, r3
 8000972:	68fb      	ldr	r3, [r7, #12]
 8000974:	4313      	orrs	r3, r2
 8000976:	60fb      	str	r3, [r7, #12]

	/* CPHA configuration */
	tempreg |= pSPIHandle->SPIConfig.SPI_CPHA << SPI_CR1_CPHA;
 8000978:	687b      	ldr	r3, [r7, #4]
 800097a:	7a5b      	ldrb	r3, [r3, #9]
 800097c:	461a      	mov	r2, r3
 800097e:	68fb      	ldr	r3, [r7, #12]
 8000980:	4313      	orrs	r3, r2
 8000982:	60fb      	str	r3, [r7, #12]

	/* Save temperg in CR1 register */
	pSPIHandle->pSPIx->CR1 = tempreg;
 8000984:	687b      	ldr	r3, [r7, #4]
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	68fa      	ldr	r2, [r7, #12]
 800098a:	601a      	str	r2, [r3, #0]

}
 800098c:	bf00      	nop
 800098e:	3710      	adds	r7, #16
 8000990:	46bd      	mov	sp, r7
 8000992:	bd80      	pop	{r7, pc}

08000994 <SPI_GetFlagStatus>:
 *
 * @Note			- None
 *
 *****************************************************************/
uint8_t SPI_GetFlagStatus(SPI_RegDef_t *pSPIx, uint32_t FlagName)
{
 8000994:	b480      	push	{r7}
 8000996:	b083      	sub	sp, #12
 8000998:	af00      	add	r7, sp, #0
 800099a:	6078      	str	r0, [r7, #4]
 800099c:	6039      	str	r1, [r7, #0]
	if(pSPIx->SR & FlagName)
 800099e:	687b      	ldr	r3, [r7, #4]
 80009a0:	689a      	ldr	r2, [r3, #8]
 80009a2:	683b      	ldr	r3, [r7, #0]
 80009a4:	4013      	ands	r3, r2
 80009a6:	2b00      	cmp	r3, #0
 80009a8:	d001      	beq.n	80009ae <SPI_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 80009aa:	2301      	movs	r3, #1
 80009ac:	e000      	b.n	80009b0 <SPI_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 80009ae:	2300      	movs	r3, #0
}
 80009b0:	4618      	mov	r0, r3
 80009b2:	370c      	adds	r7, #12
 80009b4:	46bd      	mov	sp, r7
 80009b6:	bc80      	pop	{r7}
 80009b8:	4770      	bx	lr

080009ba <SPI_SendData>:
 *
 * @Note			- None
 *
 *****************************************************************/
void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer, uint32_t Length)
{
 80009ba:	b580      	push	{r7, lr}
 80009bc:	b084      	sub	sp, #16
 80009be:	af00      	add	r7, sp, #0
 80009c0:	60f8      	str	r0, [r7, #12]
 80009c2:	60b9      	str	r1, [r7, #8]
 80009c4:	607a      	str	r2, [r7, #4]
	while(Length > 0)
 80009c6:	e029      	b.n	8000a1c <SPI_SendData+0x62>
	{
		/* Waint until TXE is set */
		while(SPI_GetFlagStatus(pSPIx->SR, SPI_SR_TXE) == FLAG_RESET);
 80009c8:	bf00      	nop
 80009ca:	68fb      	ldr	r3, [r7, #12]
 80009cc:	689b      	ldr	r3, [r3, #8]
 80009ce:	2101      	movs	r1, #1
 80009d0:	4618      	mov	r0, r3
 80009d2:	f7ff ffdf 	bl	8000994 <SPI_GetFlagStatus>
 80009d6:	4603      	mov	r3, r0
 80009d8:	2b00      	cmp	r3, #0
 80009da:	d0f6      	beq.n	80009ca <SPI_SendData+0x10>

		if( pSPIx->CR1 & (1 << SPI_CR1_DFF) )
 80009dc:	68fb      	ldr	r3, [r7, #12]
 80009de:	681b      	ldr	r3, [r3, #0]
 80009e0:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d00e      	beq.n	8000a06 <SPI_SendData+0x4c>
		{
			/* Load data into data register */
			/* 16 bit */
			pSPIx->DR = *((uint16_t*)pTxBuffer);;
 80009e8:	68bb      	ldr	r3, [r7, #8]
 80009ea:	881b      	ldrh	r3, [r3, #0]
 80009ec:	461a      	mov	r2, r3
 80009ee:	68fb      	ldr	r3, [r7, #12]
 80009f0:	60da      	str	r2, [r3, #12]
			Length--;
 80009f2:	687b      	ldr	r3, [r7, #4]
 80009f4:	3b01      	subs	r3, #1
 80009f6:	607b      	str	r3, [r7, #4]
			Length--;
 80009f8:	687b      	ldr	r3, [r7, #4]
 80009fa:	3b01      	subs	r3, #1
 80009fc:	607b      	str	r3, [r7, #4]
			(uint16_t*)pTxBuffer++;
 80009fe:	68bb      	ldr	r3, [r7, #8]
 8000a00:	3301      	adds	r3, #1
 8000a02:	60bb      	str	r3, [r7, #8]
 8000a04:	e00a      	b.n	8000a1c <SPI_SendData+0x62>
		}
		else
		{
			/* 8 bit */
			pSPIx->DR = *((uint16_t*)pTxBuffer);;
 8000a06:	68bb      	ldr	r3, [r7, #8]
 8000a08:	881b      	ldrh	r3, [r3, #0]
 8000a0a:	461a      	mov	r2, r3
 8000a0c:	68fb      	ldr	r3, [r7, #12]
 8000a0e:	60da      	str	r2, [r3, #12]
			Length--;
 8000a10:	687b      	ldr	r3, [r7, #4]
 8000a12:	3b01      	subs	r3, #1
 8000a14:	607b      	str	r3, [r7, #4]
			pTxBuffer++;
 8000a16:	68bb      	ldr	r3, [r7, #8]
 8000a18:	3301      	adds	r3, #1
 8000a1a:	60bb      	str	r3, [r7, #8]
	while(Length > 0)
 8000a1c:	687b      	ldr	r3, [r7, #4]
 8000a1e:	2b00      	cmp	r3, #0
 8000a20:	d1d2      	bne.n	80009c8 <SPI_SendData+0xe>
		}
	}
}
 8000a22:	bf00      	nop
 8000a24:	3710      	adds	r7, #16
 8000a26:	46bd      	mov	sp, r7
 8000a28:	bd80      	pop	{r7, pc}

08000a2a <SPI_PeripheralControl>:
 *
 * @Note			- None
 *
 *****************************************************************/
void SPI_PeripheralControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi)
{
 8000a2a:	b480      	push	{r7}
 8000a2c:	b083      	sub	sp, #12
 8000a2e:	af00      	add	r7, sp, #0
 8000a30:	6078      	str	r0, [r7, #4]
 8000a32:	460b      	mov	r3, r1
 8000a34:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000a36:	78fb      	ldrb	r3, [r7, #3]
 8000a38:	2b01      	cmp	r3, #1
 8000a3a:	d106      	bne.n	8000a4a <SPI_PeripheralControl+0x20>
	{
		pSPIx->CR1 |= (1 << SPI_CR1_SPE);
 8000a3c:	687b      	ldr	r3, [r7, #4]
 8000a3e:	681b      	ldr	r3, [r3, #0]
 8000a40:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000a44:	687b      	ldr	r3, [r7, #4]
 8000a46:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
	}
}
 8000a48:	e005      	b.n	8000a56 <SPI_PeripheralControl+0x2c>
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
 8000a4a:	687b      	ldr	r3, [r7, #4]
 8000a4c:	681b      	ldr	r3, [r3, #0]
 8000a4e:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000a52:	687b      	ldr	r3, [r7, #4]
 8000a54:	601a      	str	r2, [r3, #0]
}
 8000a56:	bf00      	nop
 8000a58:	370c      	adds	r7, #12
 8000a5a:	46bd      	mov	sp, r7
 8000a5c:	bc80      	pop	{r7}
 8000a5e:	4770      	bx	lr

08000a60 <SPI_SSIConfig>:
 *
 * @Note			- None
 *
 *****************************************************************/
void SPI_SSIConfig(SPI_RegDef_t *pSPIx, uint8_t EnorDi)
{
 8000a60:	b480      	push	{r7}
 8000a62:	b083      	sub	sp, #12
 8000a64:	af00      	add	r7, sp, #0
 8000a66:	6078      	str	r0, [r7, #4]
 8000a68:	460b      	mov	r3, r1
 8000a6a:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000a6c:	78fb      	ldrb	r3, [r7, #3]
 8000a6e:	2b01      	cmp	r3, #1
 8000a70:	d106      	bne.n	8000a80 <SPI_SSIConfig+0x20>
	{
		pSPIx->CR1 |= (1 << SPI_CR1_SSI);
 8000a72:	687b      	ldr	r3, [r7, #4]
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8000a7a:	687b      	ldr	r3, [r7, #4]
 8000a7c:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pSPIx->CR1 &= ~(1 << SPI_CR1_SSI);
	}
}
 8000a7e:	e005      	b.n	8000a8c <SPI_SSIConfig+0x2c>
		pSPIx->CR1 &= ~(1 << SPI_CR1_SSI);
 8000a80:	687b      	ldr	r3, [r7, #4]
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8000a88:	687b      	ldr	r3, [r7, #4]
 8000a8a:	601a      	str	r2, [r3, #0]
}
 8000a8c:	bf00      	nop
 8000a8e:	370c      	adds	r7, #12
 8000a90:	46bd      	mov	sp, r7
 8000a92:	bc80      	pop	{r7}
 8000a94:	4770      	bx	lr
	...

08000a98 <__libc_init_array>:
 8000a98:	b570      	push	{r4, r5, r6, lr}
 8000a9a:	4e0d      	ldr	r6, [pc, #52]	; (8000ad0 <__libc_init_array+0x38>)
 8000a9c:	4c0d      	ldr	r4, [pc, #52]	; (8000ad4 <__libc_init_array+0x3c>)
 8000a9e:	1ba4      	subs	r4, r4, r6
 8000aa0:	10a4      	asrs	r4, r4, #2
 8000aa2:	2500      	movs	r5, #0
 8000aa4:	42a5      	cmp	r5, r4
 8000aa6:	d109      	bne.n	8000abc <__libc_init_array+0x24>
 8000aa8:	4e0b      	ldr	r6, [pc, #44]	; (8000ad8 <__libc_init_array+0x40>)
 8000aaa:	4c0c      	ldr	r4, [pc, #48]	; (8000adc <__libc_init_array+0x44>)
 8000aac:	f000 f818 	bl	8000ae0 <_init>
 8000ab0:	1ba4      	subs	r4, r4, r6
 8000ab2:	10a4      	asrs	r4, r4, #2
 8000ab4:	2500      	movs	r5, #0
 8000ab6:	42a5      	cmp	r5, r4
 8000ab8:	d105      	bne.n	8000ac6 <__libc_init_array+0x2e>
 8000aba:	bd70      	pop	{r4, r5, r6, pc}
 8000abc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000ac0:	4798      	blx	r3
 8000ac2:	3501      	adds	r5, #1
 8000ac4:	e7ee      	b.n	8000aa4 <__libc_init_array+0xc>
 8000ac6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000aca:	4798      	blx	r3
 8000acc:	3501      	adds	r5, #1
 8000ace:	e7f2      	b.n	8000ab6 <__libc_init_array+0x1e>
 8000ad0:	08000b08 	.word	0x08000b08
 8000ad4:	08000b08 	.word	0x08000b08
 8000ad8:	08000b08 	.word	0x08000b08
 8000adc:	08000b0c 	.word	0x08000b0c

08000ae0 <_init>:
 8000ae0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ae2:	bf00      	nop
 8000ae4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ae6:	bc08      	pop	{r3}
 8000ae8:	469e      	mov	lr, r3
 8000aea:	4770      	bx	lr

08000aec <_fini>:
 8000aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aee:	bf00      	nop
 8000af0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000af2:	bc08      	pop	{r3}
 8000af4:	469e      	mov	lr, r3
 8000af6:	4770      	bx	lr
