
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000081c  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009e0  080009e8  000109e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009e0  080009e0  000109e8  2**0
                  CONTENTS
  4 .ARM          00000000  080009e0  080009e0  000109e8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009e0  080009e8  000109e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009e0  080009e0  000109e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009e4  080009e4  000109e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080009e8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080009e8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000109e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011af  00000000  00000000  00010a12  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000316  00000000  00000000  00011bc1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011ed8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00011fa0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000204a  00000000  00000000  00012040  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000c3e  00000000  00000000  0001408a  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00008fa3  00000000  00000000  00014cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001dc6b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001dce8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080009c8 	.word	0x080009c8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080009c8 	.word	0x080009c8

08000204 <main>:
{
	for(uint32_t i = 0; i < 500000; i++);
}

int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GpioBtn;

	memset(&GpioLed, 0, sizeof(GpioLed));
 800020a:	f107 030c 	add.w	r3, r7, #12
 800020e:	220c      	movs	r2, #12
 8000210:	2100      	movs	r1, #0
 8000212:	4618      	mov	r0, r3
 8000214:	f000 fbd0 	bl	80009b8 <memset>
	memset(&GpioBtn, 0, sizeof(GpioBtn));
 8000218:	463b      	mov	r3, r7
 800021a:	220c      	movs	r2, #12
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f000 fbca 	bl	80009b8 <memset>

	GpioLed.pGPIOx = GPIOA;
 8000224:	4b1a      	ldr	r3, [pc, #104]	; (8000290 <main+0x8c>)
 8000226:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000228:	2305      	movs	r3, #5
 800022a:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022c:	2301      	movs	r3, #1
 800022e:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000230:	2302      	movs	r3, #2
 8000232:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000234:	2300      	movs	r3, #0
 8000236:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800023c:	2101      	movs	r1, #1
 800023e:	4814      	ldr	r0, [pc, #80]	; (8000290 <main+0x8c>)
 8000240:	f000 f862 	bl	8000308 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000244:	f107 030c 	add.w	r3, r7, #12
 8000248:	4618      	mov	r0, r3
 800024a:	f000 f92d 	bl	80004a8 <GPIO_Init>

	GpioBtn.pGPIOx = GPIOC;
 800024e:	4b11      	ldr	r3, [pc, #68]	; (8000294 <main+0x90>)
 8000250:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000252:	230d      	movs	r3, #13
 8000254:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000256:	2304      	movs	r3, #4
 8000258:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800025a:	2302      	movs	r3, #2
 800025c:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PD; //Pull up
 800025e:	2302      	movs	r3, #2
 8000260:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOC, ENABLE);
 8000262:	2101      	movs	r1, #1
 8000264:	480b      	ldr	r0, [pc, #44]	; (8000294 <main+0x90>)
 8000266:	f000 f84f 	bl	8000308 <GPIO_PeriClockControl>

	GPIO_Init(&GpioBtn);
 800026a:	463b      	mov	r3, r7
 800026c:	4618      	mov	r0, r3
 800026e:	f000 f91b 	bl	80004a8 <GPIO_Init>

	GPIO_WriteToOutputPin(GPIOA,GPIO_PIN_NO_5,GPIO_PIN_RESET);
 8000272:	2200      	movs	r2, #0
 8000274:	2105      	movs	r1, #5
 8000276:	4806      	ldr	r0, [pc, #24]	; (8000290 <main+0x8c>)
 8000278:	f000 faaa 	bl	80007d0 <GPIO_WriteToOutputPin>

	/* IRQ configuration */
	GPIO_IRQPriorityConfig(IRQ_NO_EXIT15_10, NVIC_IRQ_PRI15);
 800027c:	210f      	movs	r1, #15
 800027e:	2028      	movs	r0, #40	; 0x28
 8000280:	f000 fb28 	bl	80008d4 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXIT15_10, ENABLE);
 8000284:	2101      	movs	r1, #1
 8000286:	2028      	movs	r0, #40	; 0x28
 8000288:	f000 fada 	bl	8000840 <GPIO_IRQInterruptConfig>

	while(1);
 800028c:	e7fe      	b.n	800028c <main+0x88>
 800028e:	bf00      	nop
 8000290:	40020000 	.word	0x40020000
 8000294:	40020800 	.word	0x40020800

08000298 <EXTI15_10_IRQHandler>:

	return 0;
}

void EXTI15_10_IRQHandler(void)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_13);
 800029c:	200d      	movs	r0, #13
 800029e:	f000 fb47 	bl	8000930 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 80002a2:	2105      	movs	r1, #5
 80002a4:	4802      	ldr	r0, [pc, #8]	; (80002b0 <EXTI15_10_IRQHandler+0x18>)
 80002a6:	f000 fab7 	bl	8000818 <GPIO_ToggleOutputPin>
}
 80002aa:	bf00      	nop
 80002ac:	bd80      	pop	{r7, pc}
 80002ae:	bf00      	nop
 80002b0:	40020000 	.word	0x40020000

080002b4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b4:	480d      	ldr	r0, [pc, #52]	; (80002ec <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002b6:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b8:	480d      	ldr	r0, [pc, #52]	; (80002f0 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ba:	490e      	ldr	r1, [pc, #56]	; (80002f4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002bc:	4a0e      	ldr	r2, [pc, #56]	; (80002f8 <LoopForever+0xe>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002c0:	e002      	b.n	80002c8 <LoopCopyDataInit>

080002c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c6:	3304      	adds	r3, #4

080002c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002cc:	d3f9      	bcc.n	80002c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ce:	4a0b      	ldr	r2, [pc, #44]	; (80002fc <LoopForever+0x12>)
  ldr r4, =_ebss
 80002d0:	4c0b      	ldr	r4, [pc, #44]	; (8000300 <LoopForever+0x16>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d4:	e001      	b.n	80002da <LoopFillZerobss>

080002d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d8:	3204      	adds	r2, #4

080002da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002dc:	d3fb      	bcc.n	80002d6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002de:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002e2:	f000 fb45 	bl	8000970 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002e6:	f7ff ff8d 	bl	8000204 <main>

080002ea <LoopForever>:

LoopForever:
    b LoopForever
 80002ea:	e7fe      	b.n	80002ea <LoopForever>
  ldr   r0, =_estack
 80002ec:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f8:	080009e8 	.word	0x080009e8
  ldr r2, =_sbss
 80002fc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000300:	2000001c 	.word	0x2000001c

08000304 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000304:	e7fe      	b.n	8000304 <ADC_IRQHandler>
	...

08000308 <GPIO_PeriClockControl>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000308:	b480      	push	{r7}
 800030a:	b083      	sub	sp, #12
 800030c:	af00      	add	r7, sp, #0
 800030e:	6078      	str	r0, [r7, #4]
 8000310:	460b      	mov	r3, r1
 8000312:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE)
 8000314:	78fb      	ldrb	r3, [r7, #3]
 8000316:	2b01      	cmp	r3, #1
 8000318:	d157      	bne.n	80003ca <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	4a59      	ldr	r2, [pc, #356]	; (8000484 <GPIO_PeriClockControl+0x17c>)
 800031e:	4293      	cmp	r3, r2
 8000320:	d106      	bne.n	8000330 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000322:	4b59      	ldr	r3, [pc, #356]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000324:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000326:	4a58      	ldr	r2, [pc, #352]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000328:	f043 0301 	orr.w	r3, r3, #1
 800032c:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
	}
}
 800032e:	e0a3      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	4a56      	ldr	r2, [pc, #344]	; (800048c <GPIO_PeriClockControl+0x184>)
 8000334:	4293      	cmp	r3, r2
 8000336:	d106      	bne.n	8000346 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000338:	4b53      	ldr	r3, [pc, #332]	; (8000488 <GPIO_PeriClockControl+0x180>)
 800033a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033c:	4a52      	ldr	r2, [pc, #328]	; (8000488 <GPIO_PeriClockControl+0x180>)
 800033e:	f043 0302 	orr.w	r3, r3, #2
 8000342:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000344:	e098      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	4a51      	ldr	r2, [pc, #324]	; (8000490 <GPIO_PeriClockControl+0x188>)
 800034a:	4293      	cmp	r3, r2
 800034c:	d106      	bne.n	800035c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800034e:	4b4e      	ldr	r3, [pc, #312]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000352:	4a4d      	ldr	r2, [pc, #308]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000354:	f043 0304 	orr.w	r3, r3, #4
 8000358:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035a:	e08d      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a4d      	ldr	r2, [pc, #308]	; (8000494 <GPIO_PeriClockControl+0x18c>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d106      	bne.n	8000372 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000364:	4b48      	ldr	r3, [pc, #288]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000366:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000368:	4a47      	ldr	r2, [pc, #284]	; (8000488 <GPIO_PeriClockControl+0x180>)
 800036a:	f043 0308 	orr.w	r3, r3, #8
 800036e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000370:	e082      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4a48      	ldr	r2, [pc, #288]	; (8000498 <GPIO_PeriClockControl+0x190>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d106      	bne.n	8000388 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800037a:	4b43      	ldr	r3, [pc, #268]	; (8000488 <GPIO_PeriClockControl+0x180>)
 800037c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037e:	4a42      	ldr	r2, [pc, #264]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000380:	f043 0310 	orr.w	r3, r3, #16
 8000384:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000386:	e077      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	4a44      	ldr	r2, [pc, #272]	; (800049c <GPIO_PeriClockControl+0x194>)
 800038c:	4293      	cmp	r3, r2
 800038e:	d106      	bne.n	800039e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000390:	4b3d      	ldr	r3, [pc, #244]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000392:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000394:	4a3c      	ldr	r2, [pc, #240]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000396:	f043 0320 	orr.w	r3, r3, #32
 800039a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039c:	e06c      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	4a3f      	ldr	r2, [pc, #252]	; (80004a0 <GPIO_PeriClockControl+0x198>)
 80003a2:	4293      	cmp	r3, r2
 80003a4:	d106      	bne.n	80003b4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003a6:	4b38      	ldr	r3, [pc, #224]	; (8000488 <GPIO_PeriClockControl+0x180>)
 80003a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003aa:	4a37      	ldr	r2, [pc, #220]	; (8000488 <GPIO_PeriClockControl+0x180>)
 80003ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003b0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b2:	e061      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	4a3b      	ldr	r2, [pc, #236]	; (80004a4 <GPIO_PeriClockControl+0x19c>)
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d15d      	bne.n	8000478 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80003bc:	4b32      	ldr	r3, [pc, #200]	; (8000488 <GPIO_PeriClockControl+0x180>)
 80003be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c0:	4a31      	ldr	r2, [pc, #196]	; (8000488 <GPIO_PeriClockControl+0x180>)
 80003c2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003c6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c8:	e056      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	4a2d      	ldr	r2, [pc, #180]	; (8000484 <GPIO_PeriClockControl+0x17c>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d106      	bne.n	80003e0 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 80003d2:	4b2d      	ldr	r3, [pc, #180]	; (8000488 <GPIO_PeriClockControl+0x180>)
 80003d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d6:	4a2c      	ldr	r2, [pc, #176]	; (8000488 <GPIO_PeriClockControl+0x180>)
 80003d8:	f023 0301 	bic.w	r3, r3, #1
 80003dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003de:	e04b      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOB)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4a2a      	ldr	r2, [pc, #168]	; (800048c <GPIO_PeriClockControl+0x184>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d106      	bne.n	80003f6 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80003e8:	4b27      	ldr	r3, [pc, #156]	; (8000488 <GPIO_PeriClockControl+0x180>)
 80003ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ec:	4a26      	ldr	r2, [pc, #152]	; (8000488 <GPIO_PeriClockControl+0x180>)
 80003ee:	f023 0302 	bic.w	r3, r3, #2
 80003f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f4:	e040      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOC)
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4a25      	ldr	r2, [pc, #148]	; (8000490 <GPIO_PeriClockControl+0x188>)
 80003fa:	4293      	cmp	r3, r2
 80003fc:	d106      	bne.n	800040c <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80003fe:	4b22      	ldr	r3, [pc, #136]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000402:	4a21      	ldr	r2, [pc, #132]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000404:	f023 0304 	bic.w	r3, r3, #4
 8000408:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040a:	e035      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOD)
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	4a21      	ldr	r2, [pc, #132]	; (8000494 <GPIO_PeriClockControl+0x18c>)
 8000410:	4293      	cmp	r3, r2
 8000412:	d106      	bne.n	8000422 <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 8000414:	4b1c      	ldr	r3, [pc, #112]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000416:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000418:	4a1b      	ldr	r2, [pc, #108]	; (8000488 <GPIO_PeriClockControl+0x180>)
 800041a:	f023 0308 	bic.w	r3, r3, #8
 800041e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000420:	e02a      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOE)
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4a1c      	ldr	r2, [pc, #112]	; (8000498 <GPIO_PeriClockControl+0x190>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d106      	bne.n	8000438 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 800042a:	4b17      	ldr	r3, [pc, #92]	; (8000488 <GPIO_PeriClockControl+0x180>)
 800042c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042e:	4a16      	ldr	r2, [pc, #88]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000430:	f023 0310 	bic.w	r3, r3, #16
 8000434:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000436:	e01f      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOF)
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	4a18      	ldr	r2, [pc, #96]	; (800049c <GPIO_PeriClockControl+0x194>)
 800043c:	4293      	cmp	r3, r2
 800043e:	d106      	bne.n	800044e <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 8000440:	4b11      	ldr	r3, [pc, #68]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000442:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000444:	4a10      	ldr	r2, [pc, #64]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000446:	f023 0320 	bic.w	r3, r3, #32
 800044a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044c:	e014      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOG)
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	4a13      	ldr	r2, [pc, #76]	; (80004a0 <GPIO_PeriClockControl+0x198>)
 8000452:	4293      	cmp	r3, r2
 8000454:	d106      	bne.n	8000464 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000456:	4b0c      	ldr	r3, [pc, #48]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000458:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045a:	4a0b      	ldr	r2, [pc, #44]	; (8000488 <GPIO_PeriClockControl+0x180>)
 800045c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000460:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000462:	e009      	b.n	8000478 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx == GPIOH)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	4a0f      	ldr	r2, [pc, #60]	; (80004a4 <GPIO_PeriClockControl+0x19c>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d105      	bne.n	8000478 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 800046c:	4b06      	ldr	r3, [pc, #24]	; (8000488 <GPIO_PeriClockControl+0x180>)
 800046e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000470:	4a05      	ldr	r2, [pc, #20]	; (8000488 <GPIO_PeriClockControl+0x180>)
 8000472:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000476:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000478:	bf00      	nop
 800047a:	370c      	adds	r7, #12
 800047c:	46bd      	mov	sp, r7
 800047e:	bc80      	pop	{r7}
 8000480:	4770      	bx	lr
 8000482:	bf00      	nop
 8000484:	40020000 	.word	0x40020000
 8000488:	40023800 	.word	0x40023800
 800048c:	40020400 	.word	0x40020400
 8000490:	40020800 	.word	0x40020800
 8000494:	40020c00 	.word	0x40020c00
 8000498:	40021000 	.word	0x40021000
 800049c:	40021400 	.word	0x40021400
 80004a0:	40021800 	.word	0x40021800
 80004a4:	40021c00 	.word	0x40021c00

080004a8 <GPIO_Init>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004a8:	b480      	push	{r7}
 80004aa:	b087      	sub	sp, #28
 80004ac:	af00      	add	r7, sp, #0
 80004ae:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80004b0:	2300      	movs	r3, #0
 80004b2:	617b      	str	r3, [r7, #20]

	/* GPIO pin mode configuration */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	795b      	ldrb	r3, [r3, #5]
 80004b8:	2b03      	cmp	r3, #3
 80004ba:	d822      	bhi.n	8000502 <GPIO_Init+0x5a>
	{
		/* Non interrupt mode */
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	795b      	ldrb	r3, [r3, #5]
 80004c0:	461a      	mov	r2, r3
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	791b      	ldrb	r3, [r3, #4]
 80004c6:	005b      	lsls	r3, r3, #1
 80004c8:	fa02 f303 	lsl.w	r3, r2, r3
 80004cc:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER  &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //Clearing pin
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	681a      	ldr	r2, [r3, #0]
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	791b      	ldrb	r3, [r3, #4]
 80004d8:	005b      	lsls	r3, r3, #1
 80004da:	2103      	movs	r1, #3
 80004dc:	fa01 f303 	lsl.w	r3, r1, r3
 80004e0:	43db      	mvns	r3, r3
 80004e2:	4619      	mov	r1, r3
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	400a      	ands	r2, r1
 80004ea:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;//Setting pin
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	6819      	ldr	r1, [r3, #0]
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	697a      	ldr	r2, [r7, #20]
 80004f8:	430a      	orrs	r2, r1
 80004fa:	601a      	str	r2, [r3, #0]
		temp = 0;
 80004fc:	2300      	movs	r3, #0
 80004fe:	617b      	str	r3, [r7, #20]
 8000500:	e0c1      	b.n	8000686 <GPIO_Init+0x1de>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	795b      	ldrb	r3, [r3, #5]
 8000506:	2b04      	cmp	r3, #4
 8000508:	d117      	bne.n	800053a <GPIO_Init+0x92>
		{
			/* Configure the FTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050a:	4b47      	ldr	r3, [pc, #284]	; (8000628 <GPIO_Init+0x180>)
 800050c:	68db      	ldr	r3, [r3, #12]
 800050e:	687a      	ldr	r2, [r7, #4]
 8000510:	7912      	ldrb	r2, [r2, #4]
 8000512:	4611      	mov	r1, r2
 8000514:	2201      	movs	r2, #1
 8000516:	408a      	lsls	r2, r1
 8000518:	4611      	mov	r1, r2
 800051a:	4a43      	ldr	r2, [pc, #268]	; (8000628 <GPIO_Init+0x180>)
 800051c:	430b      	orrs	r3, r1
 800051e:	60d3      	str	r3, [r2, #12]
			/* Clear corresponding RTSR bit */
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000520:	4b41      	ldr	r3, [pc, #260]	; (8000628 <GPIO_Init+0x180>)
 8000522:	689b      	ldr	r3, [r3, #8]
 8000524:	687a      	ldr	r2, [r7, #4]
 8000526:	7912      	ldrb	r2, [r2, #4]
 8000528:	4611      	mov	r1, r2
 800052a:	2201      	movs	r2, #1
 800052c:	408a      	lsls	r2, r1
 800052e:	43d2      	mvns	r2, r2
 8000530:	4611      	mov	r1, r2
 8000532:	4a3d      	ldr	r2, [pc, #244]	; (8000628 <GPIO_Init+0x180>)
 8000534:	400b      	ands	r3, r1
 8000536:	6093      	str	r3, [r2, #8]
 8000538:	e035      	b.n	80005a6 <GPIO_Init+0xfe>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	795b      	ldrb	r3, [r3, #5]
 800053e:	2b05      	cmp	r3, #5
 8000540:	d117      	bne.n	8000572 <GPIO_Init+0xca>
		{
			/* Configure the RTSR */
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000542:	4b39      	ldr	r3, [pc, #228]	; (8000628 <GPIO_Init+0x180>)
 8000544:	689b      	ldr	r3, [r3, #8]
 8000546:	687a      	ldr	r2, [r7, #4]
 8000548:	7912      	ldrb	r2, [r2, #4]
 800054a:	4611      	mov	r1, r2
 800054c:	2201      	movs	r2, #1
 800054e:	408a      	lsls	r2, r1
 8000550:	4611      	mov	r1, r2
 8000552:	4a35      	ldr	r2, [pc, #212]	; (8000628 <GPIO_Init+0x180>)
 8000554:	430b      	orrs	r3, r1
 8000556:	6093      	str	r3, [r2, #8]
			/* Clear corresponding FTSR bit */
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000558:	4b33      	ldr	r3, [pc, #204]	; (8000628 <GPIO_Init+0x180>)
 800055a:	68db      	ldr	r3, [r3, #12]
 800055c:	687a      	ldr	r2, [r7, #4]
 800055e:	7912      	ldrb	r2, [r2, #4]
 8000560:	4611      	mov	r1, r2
 8000562:	2201      	movs	r2, #1
 8000564:	408a      	lsls	r2, r1
 8000566:	43d2      	mvns	r2, r2
 8000568:	4611      	mov	r1, r2
 800056a:	4a2f      	ldr	r2, [pc, #188]	; (8000628 <GPIO_Init+0x180>)
 800056c:	400b      	ands	r3, r1
 800056e:	60d3      	str	r3, [r2, #12]
 8000570:	e019      	b.n	80005a6 <GPIO_Init+0xfe>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT)
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	795b      	ldrb	r3, [r3, #5]
 8000576:	2b06      	cmp	r3, #6
 8000578:	d115      	bne.n	80005a6 <GPIO_Init+0xfe>
		{
			/* Configure the FTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057a:	4b2b      	ldr	r3, [pc, #172]	; (8000628 <GPIO_Init+0x180>)
 800057c:	68db      	ldr	r3, [r3, #12]
 800057e:	687a      	ldr	r2, [r7, #4]
 8000580:	7912      	ldrb	r2, [r2, #4]
 8000582:	4611      	mov	r1, r2
 8000584:	2201      	movs	r2, #1
 8000586:	408a      	lsls	r2, r1
 8000588:	4611      	mov	r1, r2
 800058a:	4a27      	ldr	r2, [pc, #156]	; (8000628 <GPIO_Init+0x180>)
 800058c:	430b      	orrs	r3, r1
 800058e:	60d3      	str	r3, [r2, #12]
			/* Configure the RTSR */
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000590:	4b25      	ldr	r3, [pc, #148]	; (8000628 <GPIO_Init+0x180>)
 8000592:	689b      	ldr	r3, [r3, #8]
 8000594:	687a      	ldr	r2, [r7, #4]
 8000596:	7912      	ldrb	r2, [r2, #4]
 8000598:	4611      	mov	r1, r2
 800059a:	2201      	movs	r2, #1
 800059c:	408a      	lsls	r2, r1
 800059e:	4611      	mov	r1, r2
 80005a0:	4a21      	ldr	r2, [pc, #132]	; (8000628 <GPIO_Init+0x180>)
 80005a2:	430b      	orrs	r3, r1
 80005a4:	6093      	str	r3, [r2, #8]
		}

		/* Configure GPIO port selection in SYSCFG_EXTICR */
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	791b      	ldrb	r3, [r3, #4]
 80005aa:	089b      	lsrs	r3, r3, #2
 80005ac:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	f003 0303 	and.w	r3, r3, #3
 80005b6:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a1b      	ldr	r2, [pc, #108]	; (800062c <GPIO_Init+0x184>)
 80005be:	4293      	cmp	r3, r2
 80005c0:	d044      	beq.n	800064c <GPIO_Init+0x1a4>
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	4a1a      	ldr	r2, [pc, #104]	; (8000630 <GPIO_Init+0x188>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d02b      	beq.n	8000624 <GPIO_Init+0x17c>
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	4a18      	ldr	r2, [pc, #96]	; (8000634 <GPIO_Init+0x18c>)
 80005d2:	4293      	cmp	r3, r2
 80005d4:	d024      	beq.n	8000620 <GPIO_Init+0x178>
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	4a17      	ldr	r2, [pc, #92]	; (8000638 <GPIO_Init+0x190>)
 80005dc:	4293      	cmp	r3, r2
 80005de:	d01d      	beq.n	800061c <GPIO_Init+0x174>
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	4a15      	ldr	r2, [pc, #84]	; (800063c <GPIO_Init+0x194>)
 80005e6:	4293      	cmp	r3, r2
 80005e8:	d016      	beq.n	8000618 <GPIO_Init+0x170>
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a14      	ldr	r2, [pc, #80]	; (8000640 <GPIO_Init+0x198>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d00f      	beq.n	8000614 <GPIO_Init+0x16c>
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	4a12      	ldr	r2, [pc, #72]	; (8000644 <GPIO_Init+0x19c>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d008      	beq.n	8000610 <GPIO_Init+0x168>
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	4a11      	ldr	r2, [pc, #68]	; (8000648 <GPIO_Init+0x1a0>)
 8000604:	4293      	cmp	r3, r2
 8000606:	d101      	bne.n	800060c <GPIO_Init+0x164>
 8000608:	2307      	movs	r3, #7
 800060a:	e020      	b.n	800064e <GPIO_Init+0x1a6>
 800060c:	2300      	movs	r3, #0
 800060e:	e01e      	b.n	800064e <GPIO_Init+0x1a6>
 8000610:	2306      	movs	r3, #6
 8000612:	e01c      	b.n	800064e <GPIO_Init+0x1a6>
 8000614:	2305      	movs	r3, #5
 8000616:	e01a      	b.n	800064e <GPIO_Init+0x1a6>
 8000618:	2304      	movs	r3, #4
 800061a:	e018      	b.n	800064e <GPIO_Init+0x1a6>
 800061c:	2303      	movs	r3, #3
 800061e:	e016      	b.n	800064e <GPIO_Init+0x1a6>
 8000620:	2302      	movs	r3, #2
 8000622:	e014      	b.n	800064e <GPIO_Init+0x1a6>
 8000624:	2301      	movs	r3, #1
 8000626:	e012      	b.n	800064e <GPIO_Init+0x1a6>
 8000628:	40013c00 	.word	0x40013c00
 800062c:	40020000 	.word	0x40020000
 8000630:	40020400 	.word	0x40020400
 8000634:	40020800 	.word	0x40020800
 8000638:	40020c00 	.word	0x40020c00
 800063c:	40021000 	.word	0x40021000
 8000640:	40021400 	.word	0x40021400
 8000644:	40021800 	.word	0x40021800
 8000648:	40021c00 	.word	0x40021c00
 800064c:	2300      	movs	r3, #0
 800064e:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000650:	4b5c      	ldr	r3, [pc, #368]	; (80007c4 <GPIO_Init+0x31c>)
 8000652:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000654:	4a5b      	ldr	r2, [pc, #364]	; (80007c4 <GPIO_Init+0x31c>)
 8000656:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800065a:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 800065c:	7c7a      	ldrb	r2, [r7, #17]
 800065e:	7cbb      	ldrb	r3, [r7, #18]
 8000660:	009b      	lsls	r3, r3, #2
 8000662:	fa02 f103 	lsl.w	r1, r2, r3
 8000666:	4a58      	ldr	r2, [pc, #352]	; (80007c8 <GPIO_Init+0x320>)
 8000668:	7cfb      	ldrb	r3, [r7, #19]
 800066a:	3302      	adds	r3, #2
 800066c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		/* Enable EXTI interrupt delivery using IMR */
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000670:	4b56      	ldr	r3, [pc, #344]	; (80007cc <GPIO_Init+0x324>)
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	687a      	ldr	r2, [r7, #4]
 8000676:	7912      	ldrb	r2, [r2, #4]
 8000678:	4611      	mov	r1, r2
 800067a:	2201      	movs	r2, #1
 800067c:	408a      	lsls	r2, r1
 800067e:	4611      	mov	r1, r2
 8000680:	4a52      	ldr	r2, [pc, #328]	; (80007cc <GPIO_Init+0x324>)
 8000682:	430b      	orrs	r3, r1
 8000684:	6013      	str	r3, [r2, #0]
	}

	/* GPIO pin speed configuration */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	799b      	ldrb	r3, [r3, #6]
 800068a:	461a      	mov	r2, r3
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	791b      	ldrb	r3, [r3, #4]
 8000690:	005b      	lsls	r3, r3, #1
 8000692:	fa02 f303 	lsl.w	r3, r2, r3
 8000696:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR  &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	689a      	ldr	r2, [r3, #8]
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	791b      	ldrb	r3, [r3, #4]
 80006a2:	005b      	lsls	r3, r3, #1
 80006a4:	2103      	movs	r1, #3
 80006a6:	fa01 f303 	lsl.w	r3, r1, r3
 80006aa:	43db      	mvns	r3, r3
 80006ac:	4619      	mov	r1, r3
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	400a      	ands	r2, r1
 80006b4:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	6899      	ldr	r1, [r3, #8]
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	697a      	ldr	r2, [r7, #20]
 80006c2:	430a      	orrs	r2, r1
 80006c4:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006c6:	2300      	movs	r3, #0
 80006c8:	617b      	str	r3, [r7, #20]

	/* GPIO pull up/down settings configuration */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	79db      	ldrb	r3, [r3, #7]
 80006ce:	461a      	mov	r2, r3
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	791b      	ldrb	r3, [r3, #4]
 80006d4:	005b      	lsls	r3, r3, #1
 80006d6:	fa02 f303 	lsl.w	r3, r2, r3
 80006da:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR  &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	68da      	ldr	r2, [r3, #12]
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	791b      	ldrb	r3, [r3, #4]
 80006e6:	005b      	lsls	r3, r3, #1
 80006e8:	2103      	movs	r1, #3
 80006ea:	fa01 f303 	lsl.w	r3, r1, r3
 80006ee:	43db      	mvns	r3, r3
 80006f0:	4619      	mov	r1, r3
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	400a      	ands	r2, r1
 80006f8:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	681b      	ldr	r3, [r3, #0]
 80006fe:	68d9      	ldr	r1, [r3, #12]
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	681b      	ldr	r3, [r3, #0]
 8000704:	697a      	ldr	r2, [r7, #20]
 8000706:	430a      	orrs	r2, r1
 8000708:	60da      	str	r2, [r3, #12]
	temp = 0;
 800070a:	2300      	movs	r3, #0
 800070c:	617b      	str	r3, [r7, #20]

	/* GPIO output type configuration */
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	7a1b      	ldrb	r3, [r3, #8]
 8000712:	461a      	mov	r2, r3
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	791b      	ldrb	r3, [r3, #4]
 8000718:	fa02 f303 	lsl.w	r3, r2, r3
 800071c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER  &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	685a      	ldr	r2, [r3, #4]
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	791b      	ldrb	r3, [r3, #4]
 8000728:	4619      	mov	r1, r3
 800072a:	2301      	movs	r3, #1
 800072c:	408b      	lsls	r3, r1
 800072e:	43db      	mvns	r3, r3
 8000730:	4619      	mov	r1, r3
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	400a      	ands	r2, r1
 8000738:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	6859      	ldr	r1, [r3, #4]
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	697a      	ldr	r2, [r7, #20]
 8000746:	430a      	orrs	r2, r1
 8000748:	605a      	str	r2, [r3, #4]
	temp = 0;
 800074a:	2300      	movs	r3, #0
 800074c:	617b      	str	r3, [r7, #20]

	/* GPIO alt functionality configuration */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	795b      	ldrb	r3, [r3, #5]
 8000752:	2b02      	cmp	r3, #2
 8000754:	d131      	bne.n	80007ba <GPIO_Init+0x312>
	{
		/* Alt functionality registers configuration */
		uint8_t afrBitNum, afrLowHighReg;

		afrLowHighReg = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	791b      	ldrb	r3, [r3, #4]
 800075a:	08db      	lsrs	r3, r3, #3
 800075c:	743b      	strb	r3, [r7, #16]
		afrBitNum = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	791b      	ldrb	r3, [r3, #4]
 8000762:	f003 0307 	and.w	r3, r3, #7
 8000766:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[afrLowHighReg] &= ~(0xF << (4 * afrBitNum));
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	7c3a      	ldrb	r2, [r7, #16]
 800076e:	3208      	adds	r2, #8
 8000770:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000774:	7bfb      	ldrb	r3, [r7, #15]
 8000776:	009b      	lsls	r3, r3, #2
 8000778:	220f      	movs	r2, #15
 800077a:	fa02 f303 	lsl.w	r3, r2, r3
 800077e:	43db      	mvns	r3, r3
 8000780:	4618      	mov	r0, r3
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	681b      	ldr	r3, [r3, #0]
 8000786:	7c3a      	ldrb	r2, [r7, #16]
 8000788:	4001      	ands	r1, r0
 800078a:	3208      	adds	r2, #8
 800078c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[afrLowHighReg] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * afrBitNum);
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	7c3a      	ldrb	r2, [r7, #16]
 8000796:	3208      	adds	r2, #8
 8000798:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	7a5b      	ldrb	r3, [r3, #9]
 80007a0:	461a      	mov	r2, r3
 80007a2:	7bfb      	ldrb	r3, [r7, #15]
 80007a4:	009b      	lsls	r3, r3, #2
 80007a6:	fa02 f303 	lsl.w	r3, r2, r3
 80007aa:	4618      	mov	r0, r3
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	7c3a      	ldrb	r2, [r7, #16]
 80007b2:	4301      	orrs	r1, r0
 80007b4:	3208      	adds	r2, #8
 80007b6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007ba:	bf00      	nop
 80007bc:	371c      	adds	r7, #28
 80007be:	46bd      	mov	sp, r7
 80007c0:	bc80      	pop	{r7}
 80007c2:	4770      	bx	lr
 80007c4:	40023800 	.word	0x40023800
 80007c8:	40013800 	.word	0x40013800
 80007cc:	40013c00 	.word	0x40013c00

080007d0 <GPIO_WriteToOutputPin>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80007d0:	b480      	push	{r7}
 80007d2:	b083      	sub	sp, #12
 80007d4:	af00      	add	r7, sp, #0
 80007d6:	6078      	str	r0, [r7, #4]
 80007d8:	460b      	mov	r3, r1
 80007da:	70fb      	strb	r3, [r7, #3]
 80007dc:	4613      	mov	r3, r2
 80007de:	70bb      	strb	r3, [r7, #2]
	if(Value == GPIO_PIN_SET)
 80007e0:	78bb      	ldrb	r3, [r7, #2]
 80007e2:	2b01      	cmp	r3, #1
 80007e4:	d109      	bne.n	80007fa <GPIO_WriteToOutputPin+0x2a>
	{
		/* Write 1 to the output data register at the bit field corresponding to the pin number */
		pGPIOx->ODR |= ( 1 << PinNumber );
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	695b      	ldr	r3, [r3, #20]
 80007ea:	78fa      	ldrb	r2, [r7, #3]
 80007ec:	2101      	movs	r1, #1
 80007ee:	fa01 f202 	lsl.w	r2, r1, r2
 80007f2:	431a      	orrs	r2, r3
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	615a      	str	r2, [r3, #20]
	else
	{
		/* Write 0 to the output data register at the bit field corresponding to the pin number */
		pGPIOx->ODR &= ~( 1 << PinNumber );	//Clear pin
	}
}
 80007f8:	e009      	b.n	800080e <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~( 1 << PinNumber );	//Clear pin
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	695b      	ldr	r3, [r3, #20]
 80007fe:	78fa      	ldrb	r2, [r7, #3]
 8000800:	2101      	movs	r1, #1
 8000802:	fa01 f202 	lsl.w	r2, r1, r2
 8000806:	43d2      	mvns	r2, r2
 8000808:	401a      	ands	r2, r3
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	615a      	str	r2, [r3, #20]
}
 800080e:	bf00      	nop
 8000810:	370c      	adds	r7, #12
 8000812:	46bd      	mov	sp, r7
 8000814:	bc80      	pop	{r7}
 8000816:	4770      	bx	lr

08000818 <GPIO_ToggleOutputPin>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000818:	b480      	push	{r7}
 800081a:	b083      	sub	sp, #12
 800081c:	af00      	add	r7, sp, #0
 800081e:	6078      	str	r0, [r7, #4]
 8000820:	460b      	mov	r3, r1
 8000822:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	695b      	ldr	r3, [r3, #20]
 8000828:	78fa      	ldrb	r2, [r7, #3]
 800082a:	2101      	movs	r1, #1
 800082c:	fa01 f202 	lsl.w	r2, r1, r2
 8000830:	405a      	eors	r2, r3
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	615a      	str	r2, [r3, #20]
}
 8000836:	bf00      	nop
 8000838:	370c      	adds	r7, #12
 800083a:	46bd      	mov	sp, r7
 800083c:	bc80      	pop	{r7}
 800083e:	4770      	bx	lr

08000840 <GPIO_IRQInterruptConfig>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000840:	b480      	push	{r7}
 8000842:	b083      	sub	sp, #12
 8000844:	af00      	add	r7, sp, #0
 8000846:	4603      	mov	r3, r0
 8000848:	460a      	mov	r2, r1
 800084a:	71fb      	strb	r3, [r7, #7]
 800084c:	4613      	mov	r3, r2
 800084e:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000850:	79bb      	ldrb	r3, [r7, #6]
 8000852:	2b01      	cmp	r3, #1
 8000854:	d132      	bne.n	80008bc <GPIO_IRQInterruptConfig+0x7c>
	{
		if(IRQNumber <= 31)
 8000856:	79fb      	ldrb	r3, [r7, #7]
 8000858:	2b1f      	cmp	r3, #31
 800085a:	d80a      	bhi.n	8000872 <GPIO_IRQInterruptConfig+0x32>
		{
			/* Program ISER0 register */
			*NVIC_ISER0 |= (1 << IRQNumber);
 800085c:	4b1a      	ldr	r3, [pc, #104]	; (80008c8 <GPIO_IRQInterruptConfig+0x88>)
 800085e:	681b      	ldr	r3, [r3, #0]
 8000860:	79fa      	ldrb	r2, [r7, #7]
 8000862:	2101      	movs	r1, #1
 8000864:	fa01 f202 	lsl.w	r2, r1, r2
 8000868:	4611      	mov	r1, r2
 800086a:	4a17      	ldr	r2, [pc, #92]	; (80008c8 <GPIO_IRQInterruptConfig+0x88>)
 800086c:	430b      	orrs	r3, r1
 800086e:	6013      	str	r3, [r2, #0]
		else if(IRQNumber >= 64 && IRQNumber < 96)
		{
			/* Program ICER2 register (64 to 95) */
		}
	}
}
 8000870:	e024      	b.n	80008bc <GPIO_IRQInterruptConfig+0x7c>
		else if(IRQNumber > 31 && IRQNumber < 64)
 8000872:	79fb      	ldrb	r3, [r7, #7]
 8000874:	2b1f      	cmp	r3, #31
 8000876:	d90f      	bls.n	8000898 <GPIO_IRQInterruptConfig+0x58>
 8000878:	79fb      	ldrb	r3, [r7, #7]
 800087a:	2b3f      	cmp	r3, #63	; 0x3f
 800087c:	d80c      	bhi.n	8000898 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 800087e:	4b13      	ldr	r3, [pc, #76]	; (80008cc <GPIO_IRQInterruptConfig+0x8c>)
 8000880:	681b      	ldr	r3, [r3, #0]
 8000882:	79fa      	ldrb	r2, [r7, #7]
 8000884:	f002 021f 	and.w	r2, r2, #31
 8000888:	2101      	movs	r1, #1
 800088a:	fa01 f202 	lsl.w	r2, r1, r2
 800088e:	4611      	mov	r1, r2
 8000890:	4a0e      	ldr	r2, [pc, #56]	; (80008cc <GPIO_IRQInterruptConfig+0x8c>)
 8000892:	430b      	orrs	r3, r1
 8000894:	6013      	str	r3, [r2, #0]
}
 8000896:	e011      	b.n	80008bc <GPIO_IRQInterruptConfig+0x7c>
		else if(IRQNumber >= 64 && IRQNumber < 96)
 8000898:	79fb      	ldrb	r3, [r7, #7]
 800089a:	2b3f      	cmp	r3, #63	; 0x3f
 800089c:	d90e      	bls.n	80008bc <GPIO_IRQInterruptConfig+0x7c>
 800089e:	79fb      	ldrb	r3, [r7, #7]
 80008a0:	2b5f      	cmp	r3, #95	; 0x5f
 80008a2:	d80b      	bhi.n	80008bc <GPIO_IRQInterruptConfig+0x7c>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 80008a4:	4b0a      	ldr	r3, [pc, #40]	; (80008d0 <GPIO_IRQInterruptConfig+0x90>)
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	79fa      	ldrb	r2, [r7, #7]
 80008aa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008ae:	2101      	movs	r1, #1
 80008b0:	fa01 f202 	lsl.w	r2, r1, r2
 80008b4:	4611      	mov	r1, r2
 80008b6:	4a06      	ldr	r2, [pc, #24]	; (80008d0 <GPIO_IRQInterruptConfig+0x90>)
 80008b8:	430b      	orrs	r3, r1
 80008ba:	6013      	str	r3, [r2, #0]
}
 80008bc:	bf00      	nop
 80008be:	370c      	adds	r7, #12
 80008c0:	46bd      	mov	sp, r7
 80008c2:	bc80      	pop	{r7}
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	e000e100 	.word	0xe000e100
 80008cc:	e000e104 	.word	0xe000e104
 80008d0:	e000e108 	.word	0xe000e108

080008d4 <GPIO_IRQPriorityConfig>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority)
{
 80008d4:	b480      	push	{r7}
 80008d6:	b085      	sub	sp, #20
 80008d8:	af00      	add	r7, sp, #0
 80008da:	4603      	mov	r3, r0
 80008dc:	460a      	mov	r2, r1
 80008de:	71fb      	strb	r3, [r7, #7]
 80008e0:	4613      	mov	r3, r2
 80008e2:	71bb      	strb	r3, [r7, #6]
	uint8_t iprx = IRQNumber / 4;
 80008e4:	79fb      	ldrb	r3, [r7, #7]
 80008e6:	089b      	lsrs	r3, r3, #2
 80008e8:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 80008ea:	79fb      	ldrb	r3, [r7, #7]
 80008ec:	f003 0303 	and.w	r3, r3, #3
 80008f0:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 80008f2:	7bbb      	ldrb	r3, [r7, #14]
 80008f4:	00db      	lsls	r3, r3, #3
 80008f6:	b2db      	uxtb	r3, r3
 80008f8:	3304      	adds	r3, #4
 80008fa:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + (iprx * 4)) |= (IRQPriority << shift_amount);
 80008fc:	7bfb      	ldrb	r3, [r7, #15]
 80008fe:	011b      	lsls	r3, r3, #4
 8000900:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000904:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000908:	681a      	ldr	r2, [r3, #0]
 800090a:	79b9      	ldrb	r1, [r7, #6]
 800090c:	7b7b      	ldrb	r3, [r7, #13]
 800090e:	fa01 f303 	lsl.w	r3, r1, r3
 8000912:	4619      	mov	r1, r3
 8000914:	7bfb      	ldrb	r3, [r7, #15]
 8000916:	011b      	lsls	r3, r3, #4
 8000918:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800091c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000920:	430a      	orrs	r2, r1
 8000922:	601a      	str	r2, [r3, #0]
}
 8000924:	bf00      	nop
 8000926:	3714      	adds	r7, #20
 8000928:	46bd      	mov	sp, r7
 800092a:	bc80      	pop	{r7}
 800092c:	4770      	bx	lr
	...

08000930 <GPIO_IRQHandling>:
 *
 * @Note			- None
 *
 *****************************************************************/
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000930:	b480      	push	{r7}
 8000932:	b083      	sub	sp, #12
 8000934:	af00      	add	r7, sp, #0
 8000936:	4603      	mov	r3, r0
 8000938:	71fb      	strb	r3, [r7, #7]
	/* Clear the PR register corresponding to pin number */
	if(EXTI->PR & (1 << PinNumber))
 800093a:	4b0c      	ldr	r3, [pc, #48]	; (800096c <GPIO_IRQHandling+0x3c>)
 800093c:	695b      	ldr	r3, [r3, #20]
 800093e:	79fa      	ldrb	r2, [r7, #7]
 8000940:	2101      	movs	r1, #1
 8000942:	fa01 f202 	lsl.w	r2, r1, r2
 8000946:	4013      	ands	r3, r2
 8000948:	2b00      	cmp	r3, #0
 800094a:	d009      	beq.n	8000960 <GPIO_IRQHandling+0x30>
	{
		/* Clear pin */
		EXTI->PR |= (1 << PinNumber);
 800094c:	4b07      	ldr	r3, [pc, #28]	; (800096c <GPIO_IRQHandling+0x3c>)
 800094e:	695b      	ldr	r3, [r3, #20]
 8000950:	79fa      	ldrb	r2, [r7, #7]
 8000952:	2101      	movs	r1, #1
 8000954:	fa01 f202 	lsl.w	r2, r1, r2
 8000958:	4611      	mov	r1, r2
 800095a:	4a04      	ldr	r2, [pc, #16]	; (800096c <GPIO_IRQHandling+0x3c>)
 800095c:	430b      	orrs	r3, r1
 800095e:	6153      	str	r3, [r2, #20]
	}
}
 8000960:	bf00      	nop
 8000962:	370c      	adds	r7, #12
 8000964:	46bd      	mov	sp, r7
 8000966:	bc80      	pop	{r7}
 8000968:	4770      	bx	lr
 800096a:	bf00      	nop
 800096c:	40013c00 	.word	0x40013c00

08000970 <__libc_init_array>:
 8000970:	b570      	push	{r4, r5, r6, lr}
 8000972:	4e0d      	ldr	r6, [pc, #52]	; (80009a8 <__libc_init_array+0x38>)
 8000974:	4c0d      	ldr	r4, [pc, #52]	; (80009ac <__libc_init_array+0x3c>)
 8000976:	1ba4      	subs	r4, r4, r6
 8000978:	10a4      	asrs	r4, r4, #2
 800097a:	2500      	movs	r5, #0
 800097c:	42a5      	cmp	r5, r4
 800097e:	d109      	bne.n	8000994 <__libc_init_array+0x24>
 8000980:	4e0b      	ldr	r6, [pc, #44]	; (80009b0 <__libc_init_array+0x40>)
 8000982:	4c0c      	ldr	r4, [pc, #48]	; (80009b4 <__libc_init_array+0x44>)
 8000984:	f000 f820 	bl	80009c8 <_init>
 8000988:	1ba4      	subs	r4, r4, r6
 800098a:	10a4      	asrs	r4, r4, #2
 800098c:	2500      	movs	r5, #0
 800098e:	42a5      	cmp	r5, r4
 8000990:	d105      	bne.n	800099e <__libc_init_array+0x2e>
 8000992:	bd70      	pop	{r4, r5, r6, pc}
 8000994:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000998:	4798      	blx	r3
 800099a:	3501      	adds	r5, #1
 800099c:	e7ee      	b.n	800097c <__libc_init_array+0xc>
 800099e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009a2:	4798      	blx	r3
 80009a4:	3501      	adds	r5, #1
 80009a6:	e7f2      	b.n	800098e <__libc_init_array+0x1e>
 80009a8:	080009e0 	.word	0x080009e0
 80009ac:	080009e0 	.word	0x080009e0
 80009b0:	080009e0 	.word	0x080009e0
 80009b4:	080009e4 	.word	0x080009e4

080009b8 <memset>:
 80009b8:	4402      	add	r2, r0
 80009ba:	4603      	mov	r3, r0
 80009bc:	4293      	cmp	r3, r2
 80009be:	d100      	bne.n	80009c2 <memset+0xa>
 80009c0:	4770      	bx	lr
 80009c2:	f803 1b01 	strb.w	r1, [r3], #1
 80009c6:	e7f9      	b.n	80009bc <memset+0x4>

080009c8 <_init>:
 80009c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ca:	bf00      	nop
 80009cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009ce:	bc08      	pop	{r3}
 80009d0:	469e      	mov	lr, r3
 80009d2:	4770      	bx	lr

080009d4 <_fini>:
 80009d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009d6:	bf00      	nop
 80009d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009da:	bc08      	pop	{r3}
 80009dc:	469e      	mov	lr, r3
 80009de:	4770      	bx	lr
